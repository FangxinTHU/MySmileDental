//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.296.
// 
#pragma warning disable 1591

namespace OpenDental.NewCrop {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Update1Soap", Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class Update1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDailyScriptReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDailyScriptReportV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDailyScriptReportV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompleteMedicationHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientFullMedicationHistory4OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientFullMedicationHistory5OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientFullMedicationHistory6OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientAllergyHistory2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientAllergyHistoryV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientFreeFormAllergyHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrescriptionTransmissionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrescriptionTransmissionStatusByPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateTestRenewalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRenewalRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRenewalRequestsV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRenewalRequestsV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRenewalRequestsDetailV4OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRenewalRequestsSummaryV4OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRenewalRequestDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRenewalRequestDetailV4OperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessRenewalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRenewalResponseTransmissionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRenewalResponseStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback FormularyAlternativesWithDrugInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMissingHealthplanInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPBMDrugHistoryV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMostRecentDownloadUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback DrugDiseaseInteractionOperationCompleted;
        
        private System.Threading.SendOrPostCallback PharmacySearchV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback PharmacySearchV4OperationCompleted;
        
        private System.Threading.SendOrPostCallback DrugSearchWithFormularyWithFavoritesV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback DrugSearchWithFormularyWithFavoritesV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback HealthplanSearchV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FormularyCoverageV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportPrescribingCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCounselingMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSideEffectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountStatusDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPBMEligibilityV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPBMEligibilityV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrescriptionTransmissionStatusV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubmittedMessageTransactionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback DrugAllergyInteractionV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ResolveFailedPrescriptionTransmissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeaningfulUsePatientEncounterInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoseCheckOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Update1() {
            this.Url = global::OpenDental.Properties.Settings.Default.OpenDental_NewCrop_Update1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDailyScriptReportCompletedEventHandler GetDailyScriptReportCompleted;
        
        /// <remarks/>
        public event GetDailyScriptReportV2CompletedEventHandler GetDailyScriptReportV2Completed;
        
        /// <remarks/>
        public event GetDailyScriptReportV3CompletedEventHandler GetDailyScriptReportV3Completed;
        
        /// <remarks/>
        public event GetCompleteMedicationHistoryCompletedEventHandler GetCompleteMedicationHistoryCompleted;
        
        /// <remarks/>
        public event GetPatientFullMedicationHistory4CompletedEventHandler GetPatientFullMedicationHistory4Completed;
        
        /// <remarks/>
        public event GetPatientFullMedicationHistory5CompletedEventHandler GetPatientFullMedicationHistory5Completed;
        
        /// <remarks/>
        public event GetPatientFullMedicationHistory6CompletedEventHandler GetPatientFullMedicationHistory6Completed;
        
        /// <remarks/>
        public event GetPatientAllergyHistory2CompletedEventHandler GetPatientAllergyHistory2Completed;
        
        /// <remarks/>
        public event GetPatientAllergyHistoryV3CompletedEventHandler GetPatientAllergyHistoryV3Completed;
        
        /// <remarks/>
        public event GetPatientFreeFormAllergyHistoryCompletedEventHandler GetPatientFreeFormAllergyHistoryCompleted;
        
        /// <remarks/>
        public event GetPrescriptionTransmissionStatusCompletedEventHandler GetPrescriptionTransmissionStatusCompleted;
        
        /// <remarks/>
        public event GetPrescriptionTransmissionStatusByPatientCompletedEventHandler GetPrescriptionTransmissionStatusByPatientCompleted;
        
        /// <remarks/>
        public event GenerateTestRenewalRequestCompletedEventHandler GenerateTestRenewalRequestCompleted;
        
        /// <remarks/>
        public event GetAllRenewalRequestsCompletedEventHandler GetAllRenewalRequestsCompleted;
        
        /// <remarks/>
        public event GetAllRenewalRequestsV2CompletedEventHandler GetAllRenewalRequestsV2Completed;
        
        /// <remarks/>
        public event GetAllRenewalRequestsV3CompletedEventHandler GetAllRenewalRequestsV3Completed;
        
        /// <remarks/>
        public event GetAllRenewalRequestsDetailV4CompletedEventHandler GetAllRenewalRequestsDetailV4Completed;
        
        /// <remarks/>
        public event GetAllRenewalRequestsSummaryV4CompletedEventHandler GetAllRenewalRequestsSummaryV4Completed;
        
        /// <remarks/>
        public event GetRenewalRequestDetailCompletedEventHandler GetRenewalRequestDetailCompleted;
        
        /// <remarks/>
        public event GetRenewalRequestDetailV4CompletedEventHandler GetRenewalRequestDetailV4Completed;
        
        /// <remarks/>
        public event ProcessRenewalRequestCompletedEventHandler ProcessRenewalRequestCompleted;
        
        /// <remarks/>
        public event GetRenewalResponseTransmissionStatusCompletedEventHandler GetRenewalResponseTransmissionStatusCompleted;
        
        /// <remarks/>
        public event GetRenewalResponseStatusCompletedEventHandler GetRenewalResponseStatusCompleted;
        
        /// <remarks/>
        public event FormularyAlternativesWithDrugInfo2CompletedEventHandler FormularyAlternativesWithDrugInfo2Completed;
        
        /// <remarks/>
        public event SendMissingHealthplanInformationCompletedEventHandler SendMissingHealthplanInformationCompleted;
        
        /// <remarks/>
        public event GetPBMDrugHistoryV2CompletedEventHandler GetPBMDrugHistoryV2Completed;
        
        /// <remarks/>
        public event GetMostRecentDownloadUrlCompletedEventHandler GetMostRecentDownloadUrlCompleted;
        
        /// <remarks/>
        public event DrugDiseaseInteractionCompletedEventHandler DrugDiseaseInteractionCompleted;
        
        /// <remarks/>
        public event PharmacySearchV3CompletedEventHandler PharmacySearchV3Completed;
        
        /// <remarks/>
        public event PharmacySearchV4CompletedEventHandler PharmacySearchV4Completed;
        
        /// <remarks/>
        public event DrugSearchWithFormularyWithFavoritesV2CompletedEventHandler DrugSearchWithFormularyWithFavoritesV2Completed;
        
        /// <remarks/>
        public event DrugSearchWithFormularyWithFavoritesV3CompletedEventHandler DrugSearchWithFormularyWithFavoritesV3Completed;
        
        /// <remarks/>
        public event HealthplanSearchV2CompletedEventHandler HealthplanSearchV2Completed;
        
        /// <remarks/>
        public event FormularyCoverageV3CompletedEventHandler FormularyCoverageV3Completed;
        
        /// <remarks/>
        public event ReportPrescribingCountCompletedEventHandler ReportPrescribingCountCompleted;
        
        /// <remarks/>
        public event GetCounselingMessagesCompletedEventHandler GetCounselingMessagesCompleted;
        
        /// <remarks/>
        public event GetSideEffectsCompletedEventHandler GetSideEffectsCompleted;
        
        /// <remarks/>
        public event GetAccountStatusDetailCompletedEventHandler GetAccountStatusDetailCompleted;
        
        /// <remarks/>
        public event GetPBMEligibilityV2CompletedEventHandler GetPBMEligibilityV2Completed;
        
        /// <remarks/>
        public event GetPBMEligibilityV3CompletedEventHandler GetPBMEligibilityV3Completed;
        
        /// <remarks/>
        public event GetPrescriptionTransmissionStatusV2CompletedEventHandler GetPrescriptionTransmissionStatusV2Completed;
        
        /// <remarks/>
        public event GetSubmittedMessageTransactionStatusCompletedEventHandler GetSubmittedMessageTransactionStatusCompleted;
        
        /// <remarks/>
        public event DrugAllergyInteractionV2CompletedEventHandler DrugAllergyInteractionV2Completed;
        
        /// <remarks/>
        public event ResolveFailedPrescriptionTransmissionCompletedEventHandler ResolveFailedPrescriptionTransmissionCompleted;
        
        /// <remarks/>
        public event GetMeaningfulUsePatientEncounterInfoCompletedEventHandler GetMeaningfulUsePatientEncounterInfoCompleted;
        
        /// <remarks/>
        public event DoseCheckCompletedEventHandler DoseCheckCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetDailyScriptReport", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetDailyScriptReport(Credentials credentials, AccountRequest accountRequest, string reportDateCCYYMMDD, string includeSchema, string sortOrder) {
            object[] results = this.Invoke("GetDailyScriptReport", new object[] {
                        credentials,
                        accountRequest,
                        reportDateCCYYMMDD,
                        includeSchema,
                        sortOrder});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetDailyScriptReportAsync(Credentials credentials, AccountRequest accountRequest, string reportDateCCYYMMDD, string includeSchema, string sortOrder) {
            this.GetDailyScriptReportAsync(credentials, accountRequest, reportDateCCYYMMDD, includeSchema, sortOrder, null);
        }
        
        /// <remarks/>
        public void GetDailyScriptReportAsync(Credentials credentials, AccountRequest accountRequest, string reportDateCCYYMMDD, string includeSchema, string sortOrder, object userState) {
            if ((this.GetDailyScriptReportOperationCompleted == null)) {
                this.GetDailyScriptReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDailyScriptReportOperationCompleted);
            }
            this.InvokeAsync("GetDailyScriptReport", new object[] {
                        credentials,
                        accountRequest,
                        reportDateCCYYMMDD,
                        includeSchema,
                        sortOrder}, this.GetDailyScriptReportOperationCompleted, userState);
        }
        
        private void OnGetDailyScriptReportOperationCompleted(object arg) {
            if ((this.GetDailyScriptReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDailyScriptReportCompleted(this, new GetDailyScriptReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetDailyScriptReportV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetDailyScriptReportV2(Credentials credentials, AccountRequest accountRequest, string reportDateCCYYMMDD, int startHour, int endHour, string status, string transmissionType, string includeSchema) {
            object[] results = this.Invoke("GetDailyScriptReportV2", new object[] {
                        credentials,
                        accountRequest,
                        reportDateCCYYMMDD,
                        startHour,
                        endHour,
                        status,
                        transmissionType,
                        includeSchema});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetDailyScriptReportV2Async(Credentials credentials, AccountRequest accountRequest, string reportDateCCYYMMDD, int startHour, int endHour, string status, string transmissionType, string includeSchema) {
            this.GetDailyScriptReportV2Async(credentials, accountRequest, reportDateCCYYMMDD, startHour, endHour, status, transmissionType, includeSchema, null);
        }
        
        /// <remarks/>
        public void GetDailyScriptReportV2Async(Credentials credentials, AccountRequest accountRequest, string reportDateCCYYMMDD, int startHour, int endHour, string status, string transmissionType, string includeSchema, object userState) {
            if ((this.GetDailyScriptReportV2OperationCompleted == null)) {
                this.GetDailyScriptReportV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDailyScriptReportV2OperationCompleted);
            }
            this.InvokeAsync("GetDailyScriptReportV2", new object[] {
                        credentials,
                        accountRequest,
                        reportDateCCYYMMDD,
                        startHour,
                        endHour,
                        status,
                        transmissionType,
                        includeSchema}, this.GetDailyScriptReportV2OperationCompleted, userState);
        }
        
        private void OnGetDailyScriptReportV2OperationCompleted(object arg) {
            if ((this.GetDailyScriptReportV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDailyScriptReportV2Completed(this, new GetDailyScriptReportV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetDailyScriptReportV3", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetDailyScriptReportV3(Credentials credentials, AccountRequest accountRequest, string reportDateCCYYMMDD, int startHour, int endHour, string status, string transmissionType, string prescriptionType, string prescriptionSubType, string includeSchema) {
            object[] results = this.Invoke("GetDailyScriptReportV3", new object[] {
                        credentials,
                        accountRequest,
                        reportDateCCYYMMDD,
                        startHour,
                        endHour,
                        status,
                        transmissionType,
                        prescriptionType,
                        prescriptionSubType,
                        includeSchema});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetDailyScriptReportV3Async(Credentials credentials, AccountRequest accountRequest, string reportDateCCYYMMDD, int startHour, int endHour, string status, string transmissionType, string prescriptionType, string prescriptionSubType, string includeSchema) {
            this.GetDailyScriptReportV3Async(credentials, accountRequest, reportDateCCYYMMDD, startHour, endHour, status, transmissionType, prescriptionType, prescriptionSubType, includeSchema, null);
        }
        
        /// <remarks/>
        public void GetDailyScriptReportV3Async(Credentials credentials, AccountRequest accountRequest, string reportDateCCYYMMDD, int startHour, int endHour, string status, string transmissionType, string prescriptionType, string prescriptionSubType, string includeSchema, object userState) {
            if ((this.GetDailyScriptReportV3OperationCompleted == null)) {
                this.GetDailyScriptReportV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDailyScriptReportV3OperationCompleted);
            }
            this.InvokeAsync("GetDailyScriptReportV3", new object[] {
                        credentials,
                        accountRequest,
                        reportDateCCYYMMDD,
                        startHour,
                        endHour,
                        status,
                        transmissionType,
                        prescriptionType,
                        prescriptionSubType,
                        includeSchema}, this.GetDailyScriptReportV3OperationCompleted, userState);
        }
        
        private void OnGetDailyScriptReportV3OperationCompleted(object arg) {
            if ((this.GetDailyScriptReportV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDailyScriptReportV3Completed(this, new GetDailyScriptReportV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetCompleteMedicationHistory", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetCompleteMedicationHistory(Credentials credentials, AccountRequest accountRequest, string reportDateStartCCYYMMDD, string reportDateEndCCYYMMDD, string includeSchema, string sortOrder) {
            object[] results = this.Invoke("GetCompleteMedicationHistory", new object[] {
                        credentials,
                        accountRequest,
                        reportDateStartCCYYMMDD,
                        reportDateEndCCYYMMDD,
                        includeSchema,
                        sortOrder});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompleteMedicationHistoryAsync(Credentials credentials, AccountRequest accountRequest, string reportDateStartCCYYMMDD, string reportDateEndCCYYMMDD, string includeSchema, string sortOrder) {
            this.GetCompleteMedicationHistoryAsync(credentials, accountRequest, reportDateStartCCYYMMDD, reportDateEndCCYYMMDD, includeSchema, sortOrder, null);
        }
        
        /// <remarks/>
        public void GetCompleteMedicationHistoryAsync(Credentials credentials, AccountRequest accountRequest, string reportDateStartCCYYMMDD, string reportDateEndCCYYMMDD, string includeSchema, string sortOrder, object userState) {
            if ((this.GetCompleteMedicationHistoryOperationCompleted == null)) {
                this.GetCompleteMedicationHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompleteMedicationHistoryOperationCompleted);
            }
            this.InvokeAsync("GetCompleteMedicationHistory", new object[] {
                        credentials,
                        accountRequest,
                        reportDateStartCCYYMMDD,
                        reportDateEndCCYYMMDD,
                        includeSchema,
                        sortOrder}, this.GetCompleteMedicationHistoryOperationCompleted, userState);
        }
        
        private void OnGetCompleteMedicationHistoryOperationCompleted(object arg) {
            if ((this.GetCompleteMedicationHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompleteMedicationHistoryCompleted(this, new GetCompleteMedicationHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPatientFullMedicationHistory" +
            "4", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDrugDetailResult4 GetPatientFullMedicationHistory4(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PrescriptionHistoryRequest prescriptionHistoryRequest, PatientInformationRequester patientInformationRequester, string patientIdType) {
            object[] results = this.Invoke("GetPatientFullMedicationHistory4", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        prescriptionHistoryRequest,
                        patientInformationRequester,
                        patientIdType});
            return ((PatientDrugDetailResult4)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientFullMedicationHistory4Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PrescriptionHistoryRequest prescriptionHistoryRequest, PatientInformationRequester patientInformationRequester, string patientIdType) {
            this.GetPatientFullMedicationHistory4Async(credentials, accountRequest, patientRequest, prescriptionHistoryRequest, patientInformationRequester, patientIdType, null);
        }
        
        /// <remarks/>
        public void GetPatientFullMedicationHistory4Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PrescriptionHistoryRequest prescriptionHistoryRequest, PatientInformationRequester patientInformationRequester, string patientIdType, object userState) {
            if ((this.GetPatientFullMedicationHistory4OperationCompleted == null)) {
                this.GetPatientFullMedicationHistory4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientFullMedicationHistory4OperationCompleted);
            }
            this.InvokeAsync("GetPatientFullMedicationHistory4", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        prescriptionHistoryRequest,
                        patientInformationRequester,
                        patientIdType}, this.GetPatientFullMedicationHistory4OperationCompleted, userState);
        }
        
        private void OnGetPatientFullMedicationHistory4OperationCompleted(object arg) {
            if ((this.GetPatientFullMedicationHistory4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientFullMedicationHistory4Completed(this, new GetPatientFullMedicationHistory4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPatientFullMedicationHistory" +
            "5", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientDrugDetailResult5 GetPatientFullMedicationHistory5(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PrescriptionHistoryRequest prescriptionHistoryRequest, PatientInformationRequester patientInformationRequester, string patientIdType) {
            object[] results = this.Invoke("GetPatientFullMedicationHistory5", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        prescriptionHistoryRequest,
                        patientInformationRequester,
                        patientIdType});
            return ((PatientDrugDetailResult5)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientFullMedicationHistory5Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PrescriptionHistoryRequest prescriptionHistoryRequest, PatientInformationRequester patientInformationRequester, string patientIdType) {
            this.GetPatientFullMedicationHistory5Async(credentials, accountRequest, patientRequest, prescriptionHistoryRequest, patientInformationRequester, patientIdType, null);
        }
        
        /// <remarks/>
        public void GetPatientFullMedicationHistory5Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PrescriptionHistoryRequest prescriptionHistoryRequest, PatientInformationRequester patientInformationRequester, string patientIdType, object userState) {
            if ((this.GetPatientFullMedicationHistory5OperationCompleted == null)) {
                this.GetPatientFullMedicationHistory5OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientFullMedicationHistory5OperationCompleted);
            }
            this.InvokeAsync("GetPatientFullMedicationHistory5", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        prescriptionHistoryRequest,
                        patientInformationRequester,
                        patientIdType}, this.GetPatientFullMedicationHistory5OperationCompleted, userState);
        }
        
        private void OnGetPatientFullMedicationHistory5OperationCompleted(object arg) {
            if ((this.GetPatientFullMedicationHistory5Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientFullMedicationHistory5Completed(this, new GetPatientFullMedicationHistory5CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPatientFullMedicationHistory" +
            "6", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetPatientFullMedicationHistory6(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PrescriptionHistoryRequest prescriptionHistoryRequest, PatientInformationRequester patientInformationRequester, string patientIdType, string includeSchema) {
            object[] results = this.Invoke("GetPatientFullMedicationHistory6", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        prescriptionHistoryRequest,
                        patientInformationRequester,
                        patientIdType,
                        includeSchema});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientFullMedicationHistory6Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PrescriptionHistoryRequest prescriptionHistoryRequest, PatientInformationRequester patientInformationRequester, string patientIdType, string includeSchema) {
            this.GetPatientFullMedicationHistory6Async(credentials, accountRequest, patientRequest, prescriptionHistoryRequest, patientInformationRequester, patientIdType, includeSchema, null);
        }
        
        /// <remarks/>
        public void GetPatientFullMedicationHistory6Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PrescriptionHistoryRequest prescriptionHistoryRequest, PatientInformationRequester patientInformationRequester, string patientIdType, string includeSchema, object userState) {
            if ((this.GetPatientFullMedicationHistory6OperationCompleted == null)) {
                this.GetPatientFullMedicationHistory6OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientFullMedicationHistory6OperationCompleted);
            }
            this.InvokeAsync("GetPatientFullMedicationHistory6", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        prescriptionHistoryRequest,
                        patientInformationRequester,
                        patientIdType,
                        includeSchema}, this.GetPatientFullMedicationHistory6OperationCompleted, userState);
        }
        
        private void OnGetPatientFullMedicationHistory6OperationCompleted(object arg) {
            if ((this.GetPatientFullMedicationHistory6Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientFullMedicationHistory6Completed(this, new GetPatientFullMedicationHistory6CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPatientAllergyHistory2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientAllergyExtendedDetailResult GetPatientAllergyHistory2(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester) {
            object[] results = this.Invoke("GetPatientAllergyHistory2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester});
            return ((PatientAllergyExtendedDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientAllergyHistory2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester) {
            this.GetPatientAllergyHistory2Async(credentials, accountRequest, patientRequest, patientInformationRequester, null);
        }
        
        /// <remarks/>
        public void GetPatientAllergyHistory2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, object userState) {
            if ((this.GetPatientAllergyHistory2OperationCompleted == null)) {
                this.GetPatientAllergyHistory2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientAllergyHistory2OperationCompleted);
            }
            this.InvokeAsync("GetPatientAllergyHistory2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester}, this.GetPatientAllergyHistory2OperationCompleted, userState);
        }
        
        private void OnGetPatientAllergyHistory2OperationCompleted(object arg) {
            if ((this.GetPatientAllergyHistory2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientAllergyHistory2Completed(this, new GetPatientAllergyHistory2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPatientAllergyHistoryV3", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetPatientAllergyHistoryV3(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester) {
            object[] results = this.Invoke("GetPatientAllergyHistoryV3", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientAllergyHistoryV3Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester) {
            this.GetPatientAllergyHistoryV3Async(credentials, accountRequest, patientRequest, patientInformationRequester, null);
        }
        
        /// <remarks/>
        public void GetPatientAllergyHistoryV3Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, object userState) {
            if ((this.GetPatientAllergyHistoryV3OperationCompleted == null)) {
                this.GetPatientAllergyHistoryV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientAllergyHistoryV3OperationCompleted);
            }
            this.InvokeAsync("GetPatientAllergyHistoryV3", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester}, this.GetPatientAllergyHistoryV3OperationCompleted, userState);
        }
        
        private void OnGetPatientAllergyHistoryV3OperationCompleted(object arg) {
            if ((this.GetPatientAllergyHistoryV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientAllergyHistoryV3Completed(this, new GetPatientAllergyHistoryV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPatientFreeFormAllergyHistor" +
            "y", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientFreeFormAllergyExtendedDetailResult GetPatientFreeFormAllergyHistory(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester) {
            object[] results = this.Invoke("GetPatientFreeFormAllergyHistory", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester});
            return ((PatientFreeFormAllergyExtendedDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientFreeFormAllergyHistoryAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester) {
            this.GetPatientFreeFormAllergyHistoryAsync(credentials, accountRequest, patientRequest, patientInformationRequester, null);
        }
        
        /// <remarks/>
        public void GetPatientFreeFormAllergyHistoryAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, object userState) {
            if ((this.GetPatientFreeFormAllergyHistoryOperationCompleted == null)) {
                this.GetPatientFreeFormAllergyHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientFreeFormAllergyHistoryOperationCompleted);
            }
            this.InvokeAsync("GetPatientFreeFormAllergyHistory", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester}, this.GetPatientFreeFormAllergyHistoryOperationCompleted, userState);
        }
        
        private void OnGetPatientFreeFormAllergyHistoryOperationCompleted(object arg) {
            if ((this.GetPatientFreeFormAllergyHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientFreeFormAllergyHistoryCompleted(this, new GetPatientFreeFormAllergyHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPrescriptionTransmissionStat" +
            "us", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransmissionSummaryResult GetPrescriptionTransmissionStatus(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string prescriptionIds) {
            object[] results = this.Invoke("GetPrescriptionTransmissionStatus", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        prescriptionIds});
            return ((TransmissionSummaryResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrescriptionTransmissionStatusAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string prescriptionIds) {
            this.GetPrescriptionTransmissionStatusAsync(credentials, accountRequest, patientRequest, patientInformationRequester, prescriptionIds, null);
        }
        
        /// <remarks/>
        public void GetPrescriptionTransmissionStatusAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string prescriptionIds, object userState) {
            if ((this.GetPrescriptionTransmissionStatusOperationCompleted == null)) {
                this.GetPrescriptionTransmissionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrescriptionTransmissionStatusOperationCompleted);
            }
            this.InvokeAsync("GetPrescriptionTransmissionStatus", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        prescriptionIds}, this.GetPrescriptionTransmissionStatusOperationCompleted, userState);
        }
        
        private void OnGetPrescriptionTransmissionStatusOperationCompleted(object arg) {
            if ((this.GetPrescriptionTransmissionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrescriptionTransmissionStatusCompleted(this, new GetPrescriptionTransmissionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPrescriptionTransmissionStat" +
            "usByPatient", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransmissionSummaryResult GetPrescriptionTransmissionStatusByPatient(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string queryMode, string status, string subStatus, string archiveStatus) {
            object[] results = this.Invoke("GetPrescriptionTransmissionStatusByPatient", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        queryMode,
                        status,
                        subStatus,
                        archiveStatus});
            return ((TransmissionSummaryResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrescriptionTransmissionStatusByPatientAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string queryMode, string status, string subStatus, string archiveStatus) {
            this.GetPrescriptionTransmissionStatusByPatientAsync(credentials, accountRequest, patientRequest, patientInformationRequester, queryMode, status, subStatus, archiveStatus, null);
        }
        
        /// <remarks/>
        public void GetPrescriptionTransmissionStatusByPatientAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string queryMode, string status, string subStatus, string archiveStatus, object userState) {
            if ((this.GetPrescriptionTransmissionStatusByPatientOperationCompleted == null)) {
                this.GetPrescriptionTransmissionStatusByPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrescriptionTransmissionStatusByPatientOperationCompleted);
            }
            this.InvokeAsync("GetPrescriptionTransmissionStatusByPatient", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        queryMode,
                        status,
                        subStatus,
                        archiveStatus}, this.GetPrescriptionTransmissionStatusByPatientOperationCompleted, userState);
        }
        
        private void OnGetPrescriptionTransmissionStatusByPatientOperationCompleted(object arg) {
            if ((this.GetPrescriptionTransmissionStatusByPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrescriptionTransmissionStatusByPatientCompleted(this, new GetPrescriptionTransmissionStatusByPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GenerateTestRenewalRequest", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GenerateTestRenewalRequest(Credentials credentials, AccountRequest accountRequest, string xmlIn, bool createCurrentMedFromRxInfo, string originalPrescriptionFillDate) {
            object[] results = this.Invoke("GenerateTestRenewalRequest", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn,
                        createCurrentMedFromRxInfo,
                        originalPrescriptionFillDate});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateTestRenewalRequestAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn, bool createCurrentMedFromRxInfo, string originalPrescriptionFillDate) {
            this.GenerateTestRenewalRequestAsync(credentials, accountRequest, xmlIn, createCurrentMedFromRxInfo, originalPrescriptionFillDate, null);
        }
        
        /// <remarks/>
        public void GenerateTestRenewalRequestAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn, bool createCurrentMedFromRxInfo, string originalPrescriptionFillDate, object userState) {
            if ((this.GenerateTestRenewalRequestOperationCompleted == null)) {
                this.GenerateTestRenewalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateTestRenewalRequestOperationCompleted);
            }
            this.InvokeAsync("GenerateTestRenewalRequest", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn,
                        createCurrentMedFromRxInfo,
                        originalPrescriptionFillDate}, this.GenerateTestRenewalRequestOperationCompleted, userState);
        }
        
        private void OnGenerateTestRenewalRequestOperationCompleted(object arg) {
            if ((this.GenerateTestRenewalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateTestRenewalRequestCompleted(this, new GenerateTestRenewalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetAllRenewalRequests", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RenewalSummaryResult GetAllRenewalRequests(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId) {
            object[] results = this.Invoke("GetAllRenewalRequests", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId});
            return ((RenewalSummaryResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRenewalRequestsAsync(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId) {
            this.GetAllRenewalRequestsAsync(credentials, accountRequest, locationId, licensedPrescriberId, null);
        }
        
        /// <remarks/>
        public void GetAllRenewalRequestsAsync(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, object userState) {
            if ((this.GetAllRenewalRequestsOperationCompleted == null)) {
                this.GetAllRenewalRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRenewalRequestsOperationCompleted);
            }
            this.InvokeAsync("GetAllRenewalRequests", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId}, this.GetAllRenewalRequestsOperationCompleted, userState);
        }
        
        private void OnGetAllRenewalRequestsOperationCompleted(object arg) {
            if ((this.GetAllRenewalRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRenewalRequestsCompleted(this, new GetAllRenewalRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetAllRenewalRequestsV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RenewalSummaryResultV2 GetAllRenewalRequestsV2(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId) {
            object[] results = this.Invoke("GetAllRenewalRequestsV2", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId});
            return ((RenewalSummaryResultV2)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRenewalRequestsV2Async(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId) {
            this.GetAllRenewalRequestsV2Async(credentials, accountRequest, locationId, licensedPrescriberId, null);
        }
        
        /// <remarks/>
        public void GetAllRenewalRequestsV2Async(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, object userState) {
            if ((this.GetAllRenewalRequestsV2OperationCompleted == null)) {
                this.GetAllRenewalRequestsV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRenewalRequestsV2OperationCompleted);
            }
            this.InvokeAsync("GetAllRenewalRequestsV2", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId}, this.GetAllRenewalRequestsV2OperationCompleted, userState);
        }
        
        private void OnGetAllRenewalRequestsV2OperationCompleted(object arg) {
            if ((this.GetAllRenewalRequestsV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRenewalRequestsV2Completed(this, new GetAllRenewalRequestsV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetAllRenewalRequestsV3", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RenewalSummaryResultV2 GetAllRenewalRequestsV3(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string renewalRequestDate) {
            object[] results = this.Invoke("GetAllRenewalRequestsV3", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        renewalRequestDate});
            return ((RenewalSummaryResultV2)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRenewalRequestsV3Async(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string renewalRequestDate) {
            this.GetAllRenewalRequestsV3Async(credentials, accountRequest, locationId, licensedPrescriberId, renewalRequestDate, null);
        }
        
        /// <remarks/>
        public void GetAllRenewalRequestsV3Async(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string renewalRequestDate, object userState) {
            if ((this.GetAllRenewalRequestsV3OperationCompleted == null)) {
                this.GetAllRenewalRequestsV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRenewalRequestsV3OperationCompleted);
            }
            this.InvokeAsync("GetAllRenewalRequestsV3", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        renewalRequestDate}, this.GetAllRenewalRequestsV3OperationCompleted, userState);
        }
        
        private void OnGetAllRenewalRequestsV3OperationCompleted(object arg) {
            if ((this.GetAllRenewalRequestsV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRenewalRequestsV3Completed(this, new GetAllRenewalRequestsV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetAllRenewalRequestsDetailV4", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RenewalListDetailResultV4 GetAllRenewalRequestsDetailV4(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string renewalRequestDate) {
            object[] results = this.Invoke("GetAllRenewalRequestsDetailV4", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        renewalRequestDate});
            return ((RenewalListDetailResultV4)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRenewalRequestsDetailV4Async(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string renewalRequestDate) {
            this.GetAllRenewalRequestsDetailV4Async(credentials, accountRequest, locationId, licensedPrescriberId, renewalRequestDate, null);
        }
        
        /// <remarks/>
        public void GetAllRenewalRequestsDetailV4Async(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string renewalRequestDate, object userState) {
            if ((this.GetAllRenewalRequestsDetailV4OperationCompleted == null)) {
                this.GetAllRenewalRequestsDetailV4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRenewalRequestsDetailV4OperationCompleted);
            }
            this.InvokeAsync("GetAllRenewalRequestsDetailV4", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        renewalRequestDate}, this.GetAllRenewalRequestsDetailV4OperationCompleted, userState);
        }
        
        private void OnGetAllRenewalRequestsDetailV4OperationCompleted(object arg) {
            if ((this.GetAllRenewalRequestsDetailV4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRenewalRequestsDetailV4Completed(this, new GetAllRenewalRequestsDetailV4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetAllRenewalRequestsSummaryV4", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RenewalListSummaryResultV4 GetAllRenewalRequestsSummaryV4(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string renewalRequestDate) {
            object[] results = this.Invoke("GetAllRenewalRequestsSummaryV4", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        renewalRequestDate});
            return ((RenewalListSummaryResultV4)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRenewalRequestsSummaryV4Async(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string renewalRequestDate) {
            this.GetAllRenewalRequestsSummaryV4Async(credentials, accountRequest, locationId, licensedPrescriberId, renewalRequestDate, null);
        }
        
        /// <remarks/>
        public void GetAllRenewalRequestsSummaryV4Async(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string renewalRequestDate, object userState) {
            if ((this.GetAllRenewalRequestsSummaryV4OperationCompleted == null)) {
                this.GetAllRenewalRequestsSummaryV4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRenewalRequestsSummaryV4OperationCompleted);
            }
            this.InvokeAsync("GetAllRenewalRequestsSummaryV4", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        renewalRequestDate}, this.GetAllRenewalRequestsSummaryV4OperationCompleted, userState);
        }
        
        private void OnGetAllRenewalRequestsSummaryV4OperationCompleted(object arg) {
            if ((this.GetAllRenewalRequestsSummaryV4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRenewalRequestsSummaryV4Completed(this, new GetAllRenewalRequestsSummaryV4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetRenewalRequestDetail", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RenewalDetailResult GetRenewalRequestDetail(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier) {
            object[] results = this.Invoke("GetRenewalRequestDetail", new object[] {
                        credentials,
                        accountRequest,
                        renewalRequestIdentifier});
            return ((RenewalDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetRenewalRequestDetailAsync(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier) {
            this.GetRenewalRequestDetailAsync(credentials, accountRequest, renewalRequestIdentifier, null);
        }
        
        /// <remarks/>
        public void GetRenewalRequestDetailAsync(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier, object userState) {
            if ((this.GetRenewalRequestDetailOperationCompleted == null)) {
                this.GetRenewalRequestDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRenewalRequestDetailOperationCompleted);
            }
            this.InvokeAsync("GetRenewalRequestDetail", new object[] {
                        credentials,
                        accountRequest,
                        renewalRequestIdentifier}, this.GetRenewalRequestDetailOperationCompleted, userState);
        }
        
        private void OnGetRenewalRequestDetailOperationCompleted(object arg) {
            if ((this.GetRenewalRequestDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRenewalRequestDetailCompleted(this, new GetRenewalRequestDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetRenewalRequestDetailV4", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RenewalDetailResultV4 GetRenewalRequestDetailV4(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier, string returnEncodedMessage) {
            object[] results = this.Invoke("GetRenewalRequestDetailV4", new object[] {
                        credentials,
                        accountRequest,
                        renewalRequestIdentifier,
                        returnEncodedMessage});
            return ((RenewalDetailResultV4)(results[0]));
        }
        
        /// <remarks/>
        public void GetRenewalRequestDetailV4Async(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier, string returnEncodedMessage) {
            this.GetRenewalRequestDetailV4Async(credentials, accountRequest, renewalRequestIdentifier, returnEncodedMessage, null);
        }
        
        /// <remarks/>
        public void GetRenewalRequestDetailV4Async(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier, string returnEncodedMessage, object userState) {
            if ((this.GetRenewalRequestDetailV4OperationCompleted == null)) {
                this.GetRenewalRequestDetailV4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRenewalRequestDetailV4OperationCompleted);
            }
            this.InvokeAsync("GetRenewalRequestDetailV4", new object[] {
                        credentials,
                        accountRequest,
                        renewalRequestIdentifier,
                        returnEncodedMessage}, this.GetRenewalRequestDetailV4OperationCompleted, userState);
        }
        
        private void OnGetRenewalRequestDetailV4OperationCompleted(object arg) {
            if ((this.GetRenewalRequestDetailV4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRenewalRequestDetailV4Completed(this, new GetRenewalRequestDetailV4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/ProcessRenewalRequest", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result ProcessRenewalRequest(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            object[] results = this.Invoke("ProcessRenewalRequest", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessRenewalRequestAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn) {
            this.ProcessRenewalRequestAsync(credentials, accountRequest, xmlIn, null);
        }
        
        /// <remarks/>
        public void ProcessRenewalRequestAsync(Credentials credentials, AccountRequest accountRequest, string xmlIn, object userState) {
            if ((this.ProcessRenewalRequestOperationCompleted == null)) {
                this.ProcessRenewalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessRenewalRequestOperationCompleted);
            }
            this.InvokeAsync("ProcessRenewalRequest", new object[] {
                        credentials,
                        accountRequest,
                        xmlIn}, this.ProcessRenewalRequestOperationCompleted, userState);
        }
        
        private void OnProcessRenewalRequestOperationCompleted(object arg) {
            if ((this.ProcessRenewalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessRenewalRequestCompleted(this, new ProcessRenewalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetRenewalResponseTransmissionS" +
            "tatus", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RenewalResponseDetailResult GetRenewalResponseTransmissionStatus(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier) {
            object[] results = this.Invoke("GetRenewalResponseTransmissionStatus", new object[] {
                        credentials,
                        accountRequest,
                        renewalRequestIdentifier});
            return ((RenewalResponseDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetRenewalResponseTransmissionStatusAsync(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier) {
            this.GetRenewalResponseTransmissionStatusAsync(credentials, accountRequest, renewalRequestIdentifier, null);
        }
        
        /// <remarks/>
        public void GetRenewalResponseTransmissionStatusAsync(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier, object userState) {
            if ((this.GetRenewalResponseTransmissionStatusOperationCompleted == null)) {
                this.GetRenewalResponseTransmissionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRenewalResponseTransmissionStatusOperationCompleted);
            }
            this.InvokeAsync("GetRenewalResponseTransmissionStatus", new object[] {
                        credentials,
                        accountRequest,
                        renewalRequestIdentifier}, this.GetRenewalResponseTransmissionStatusOperationCompleted, userState);
        }
        
        private void OnGetRenewalResponseTransmissionStatusOperationCompleted(object arg) {
            if ((this.GetRenewalResponseTransmissionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRenewalResponseTransmissionStatusCompleted(this, new GetRenewalResponseTransmissionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetRenewalResponseStatus", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetRenewalResponseStatus(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier, string includeSchema) {
            object[] results = this.Invoke("GetRenewalResponseStatus", new object[] {
                        credentials,
                        accountRequest,
                        renewalRequestIdentifier,
                        includeSchema});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetRenewalResponseStatusAsync(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier, string includeSchema) {
            this.GetRenewalResponseStatusAsync(credentials, accountRequest, renewalRequestIdentifier, includeSchema, null);
        }
        
        /// <remarks/>
        public void GetRenewalResponseStatusAsync(Credentials credentials, AccountRequest accountRequest, string renewalRequestIdentifier, string includeSchema, object userState) {
            if ((this.GetRenewalResponseStatusOperationCompleted == null)) {
                this.GetRenewalResponseStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRenewalResponseStatusOperationCompleted);
            }
            this.InvokeAsync("GetRenewalResponseStatus", new object[] {
                        credentials,
                        accountRequest,
                        renewalRequestIdentifier,
                        includeSchema}, this.GetRenewalResponseStatusOperationCompleted, userState);
        }
        
        private void OnGetRenewalResponseStatusOperationCompleted(object arg) {
            if ((this.GetRenewalResponseStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRenewalResponseStatusCompleted(this, new GetRenewalResponseStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/FormularyAlternativesWithDrugIn" +
            "fo2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DrugFormularyDetailResult FormularyAlternativesWithDrugInfo2(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string healthplanID, string healthplanTypeID, string eligibilityIndex, string drugConcept, string drugConceptType) {
            object[] results = this.Invoke("FormularyAlternativesWithDrugInfo2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex,
                        drugConcept,
                        drugConceptType});
            return ((DrugFormularyDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void FormularyAlternativesWithDrugInfo2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string healthplanID, string healthplanTypeID, string eligibilityIndex, string drugConcept, string drugConceptType) {
            this.FormularyAlternativesWithDrugInfo2Async(credentials, accountRequest, patientRequest, patientInformationRequester, healthplanID, healthplanTypeID, eligibilityIndex, drugConcept, drugConceptType, null);
        }
        
        /// <remarks/>
        public void FormularyAlternativesWithDrugInfo2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string healthplanID, string healthplanTypeID, string eligibilityIndex, string drugConcept, string drugConceptType, object userState) {
            if ((this.FormularyAlternativesWithDrugInfo2OperationCompleted == null)) {
                this.FormularyAlternativesWithDrugInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFormularyAlternativesWithDrugInfo2OperationCompleted);
            }
            this.InvokeAsync("FormularyAlternativesWithDrugInfo2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex,
                        drugConcept,
                        drugConceptType}, this.FormularyAlternativesWithDrugInfo2OperationCompleted, userState);
        }
        
        private void OnFormularyAlternativesWithDrugInfo2OperationCompleted(object arg) {
            if ((this.FormularyAlternativesWithDrugInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FormularyAlternativesWithDrugInfo2Completed(this, new FormularyAlternativesWithDrugInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/SendMissingHealthplanInformatio" +
            "n", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result SendMissingHealthplanInformation(Credentials credentials, AccountRequest accountRequest, string healthplanName, string healthplanId, string healthplanAddress1, string healthplanAddress2, string healthplanCity, string healthplanStateCode, string healthplanZip, string healthplanZip4, string healthplanPhoneNumber) {
            object[] results = this.Invoke("SendMissingHealthplanInformation", new object[] {
                        credentials,
                        accountRequest,
                        healthplanName,
                        healthplanId,
                        healthplanAddress1,
                        healthplanAddress2,
                        healthplanCity,
                        healthplanStateCode,
                        healthplanZip,
                        healthplanZip4,
                        healthplanPhoneNumber});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void SendMissingHealthplanInformationAsync(Credentials credentials, AccountRequest accountRequest, string healthplanName, string healthplanId, string healthplanAddress1, string healthplanAddress2, string healthplanCity, string healthplanStateCode, string healthplanZip, string healthplanZip4, string healthplanPhoneNumber) {
            this.SendMissingHealthplanInformationAsync(credentials, accountRequest, healthplanName, healthplanId, healthplanAddress1, healthplanAddress2, healthplanCity, healthplanStateCode, healthplanZip, healthplanZip4, healthplanPhoneNumber, null);
        }
        
        /// <remarks/>
        public void SendMissingHealthplanInformationAsync(Credentials credentials, AccountRequest accountRequest, string healthplanName, string healthplanId, string healthplanAddress1, string healthplanAddress2, string healthplanCity, string healthplanStateCode, string healthplanZip, string healthplanZip4, string healthplanPhoneNumber, object userState) {
            if ((this.SendMissingHealthplanInformationOperationCompleted == null)) {
                this.SendMissingHealthplanInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMissingHealthplanInformationOperationCompleted);
            }
            this.InvokeAsync("SendMissingHealthplanInformation", new object[] {
                        credentials,
                        accountRequest,
                        healthplanName,
                        healthplanId,
                        healthplanAddress1,
                        healthplanAddress2,
                        healthplanCity,
                        healthplanStateCode,
                        healthplanZip,
                        healthplanZip4,
                        healthplanPhoneNumber}, this.SendMissingHealthplanInformationOperationCompleted, userState);
        }
        
        private void OnSendMissingHealthplanInformationOperationCompleted(object arg) {
            if ((this.SendMissingHealthplanInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMissingHealthplanInformationCompleted(this, new SendMissingHealthplanInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPBMDrugHistoryV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DrugHistoryDetailResult GetPBMDrugHistoryV2(Credentials credentials, AccountRequest accountRequest, string eligibilityTransactionId, int monthsPrior, string includeSchema) {
            object[] results = this.Invoke("GetPBMDrugHistoryV2", new object[] {
                        credentials,
                        accountRequest,
                        eligibilityTransactionId,
                        monthsPrior,
                        includeSchema});
            return ((DrugHistoryDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPBMDrugHistoryV2Async(Credentials credentials, AccountRequest accountRequest, string eligibilityTransactionId, int monthsPrior, string includeSchema) {
            this.GetPBMDrugHistoryV2Async(credentials, accountRequest, eligibilityTransactionId, monthsPrior, includeSchema, null);
        }
        
        /// <remarks/>
        public void GetPBMDrugHistoryV2Async(Credentials credentials, AccountRequest accountRequest, string eligibilityTransactionId, int monthsPrior, string includeSchema, object userState) {
            if ((this.GetPBMDrugHistoryV2OperationCompleted == null)) {
                this.GetPBMDrugHistoryV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPBMDrugHistoryV2OperationCompleted);
            }
            this.InvokeAsync("GetPBMDrugHistoryV2", new object[] {
                        credentials,
                        accountRequest,
                        eligibilityTransactionId,
                        monthsPrior,
                        includeSchema}, this.GetPBMDrugHistoryV2OperationCompleted, userState);
        }
        
        private void OnGetPBMDrugHistoryV2OperationCompleted(object arg) {
            if ((this.GetPBMDrugHistoryV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPBMDrugHistoryV2Completed(this, new GetPBMDrugHistoryV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetMostRecentDownloadUrl", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DownloadDetailResult GetMostRecentDownloadUrl(Credentials credentials, AccountRequest accountRequest, int desiredData) {
            object[] results = this.Invoke("GetMostRecentDownloadUrl", new object[] {
                        credentials,
                        accountRequest,
                        desiredData});
            return ((DownloadDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetMostRecentDownloadUrlAsync(Credentials credentials, AccountRequest accountRequest, int desiredData) {
            this.GetMostRecentDownloadUrlAsync(credentials, accountRequest, desiredData, null);
        }
        
        /// <remarks/>
        public void GetMostRecentDownloadUrlAsync(Credentials credentials, AccountRequest accountRequest, int desiredData, object userState) {
            if ((this.GetMostRecentDownloadUrlOperationCompleted == null)) {
                this.GetMostRecentDownloadUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMostRecentDownloadUrlOperationCompleted);
            }
            this.InvokeAsync("GetMostRecentDownloadUrl", new object[] {
                        credentials,
                        accountRequest,
                        desiredData}, this.GetMostRecentDownloadUrlOperationCompleted, userState);
        }
        
        private void OnGetMostRecentDownloadUrlOperationCompleted(object arg) {
            if ((this.GetMostRecentDownloadUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMostRecentDownloadUrlCompleted(this, new GetMostRecentDownloadUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/DrugDiseaseInteraction", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DrugDiseaseDetailResult DrugDiseaseInteraction(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string[] diseaseList, string diseaseCodeType, string[] proposedMedications, string drugStandardType) {
            object[] results = this.Invoke("DrugDiseaseInteraction", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        diseaseList,
                        diseaseCodeType,
                        proposedMedications,
                        drugStandardType});
            return ((DrugDiseaseDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void DrugDiseaseInteractionAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string[] diseaseList, string diseaseCodeType, string[] proposedMedications, string drugStandardType) {
            this.DrugDiseaseInteractionAsync(credentials, accountRequest, patientRequest, patientInformationRequester, diseaseList, diseaseCodeType, proposedMedications, drugStandardType, null);
        }
        
        /// <remarks/>
        public void DrugDiseaseInteractionAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string[] diseaseList, string diseaseCodeType, string[] proposedMedications, string drugStandardType, object userState) {
            if ((this.DrugDiseaseInteractionOperationCompleted == null)) {
                this.DrugDiseaseInteractionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDrugDiseaseInteractionOperationCompleted);
            }
            this.InvokeAsync("DrugDiseaseInteraction", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        diseaseList,
                        diseaseCodeType,
                        proposedMedications,
                        drugStandardType}, this.DrugDiseaseInteractionOperationCompleted, userState);
        }
        
        private void OnDrugDiseaseInteractionOperationCompleted(object arg) {
            if ((this.DrugDiseaseInteractionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DrugDiseaseInteractionCompleted(this, new DrugDiseaseInteractionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/PharmacySearchV3", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PharmacyDetailResultV2 PharmacySearchV3(Credentials credentials, AccountRequest accountRequest, string postalCode, string phoneNumber, string streetName, string pharmacyName, string city, string state, string ncpdpID, string healthplanID, string healthplanTypeID, string eligibilityIndex) {
            object[] results = this.Invoke("PharmacySearchV3", new object[] {
                        credentials,
                        accountRequest,
                        postalCode,
                        phoneNumber,
                        streetName,
                        pharmacyName,
                        city,
                        state,
                        ncpdpID,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex});
            return ((PharmacyDetailResultV2)(results[0]));
        }
        
        /// <remarks/>
        public void PharmacySearchV3Async(Credentials credentials, AccountRequest accountRequest, string postalCode, string phoneNumber, string streetName, string pharmacyName, string city, string state, string ncpdpID, string healthplanID, string healthplanTypeID, string eligibilityIndex) {
            this.PharmacySearchV3Async(credentials, accountRequest, postalCode, phoneNumber, streetName, pharmacyName, city, state, ncpdpID, healthplanID, healthplanTypeID, eligibilityIndex, null);
        }
        
        /// <remarks/>
        public void PharmacySearchV3Async(Credentials credentials, AccountRequest accountRequest, string postalCode, string phoneNumber, string streetName, string pharmacyName, string city, string state, string ncpdpID, string healthplanID, string healthplanTypeID, string eligibilityIndex, object userState) {
            if ((this.PharmacySearchV3OperationCompleted == null)) {
                this.PharmacySearchV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPharmacySearchV3OperationCompleted);
            }
            this.InvokeAsync("PharmacySearchV3", new object[] {
                        credentials,
                        accountRequest,
                        postalCode,
                        phoneNumber,
                        streetName,
                        pharmacyName,
                        city,
                        state,
                        ncpdpID,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex}, this.PharmacySearchV3OperationCompleted, userState);
        }
        
        private void OnPharmacySearchV3OperationCompleted(object arg) {
            if ((this.PharmacySearchV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PharmacySearchV3Completed(this, new PharmacySearchV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/PharmacySearchV4", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PharmacyDetailResultV4 PharmacySearchV4(
                    Credentials credentials, 
                    AccountRequest accountRequest, 
                    string postalCode, 
                    string phoneNumber, 
                    string streetName, 
                    string pharmacyName, 
                    string city, 
                    string state, 
                    string ncpdpID, 
                    string healthplanID, 
                    string healthplanTypeID, 
                    string eligibilityIndex, 
                    string pharmacyType, 
                    string open24Hours, 
                    string specialtyID, 
                    string extraQuery1, 
                    string extraQuery2, 
                    string extraQuery3, 
                    string extraQuery4) {
            object[] results = this.Invoke("PharmacySearchV4", new object[] {
                        credentials,
                        accountRequest,
                        postalCode,
                        phoneNumber,
                        streetName,
                        pharmacyName,
                        city,
                        state,
                        ncpdpID,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex,
                        pharmacyType,
                        open24Hours,
                        specialtyID,
                        extraQuery1,
                        extraQuery2,
                        extraQuery3,
                        extraQuery4});
            return ((PharmacyDetailResultV4)(results[0]));
        }
        
        /// <remarks/>
        public void PharmacySearchV4Async(
                    Credentials credentials, 
                    AccountRequest accountRequest, 
                    string postalCode, 
                    string phoneNumber, 
                    string streetName, 
                    string pharmacyName, 
                    string city, 
                    string state, 
                    string ncpdpID, 
                    string healthplanID, 
                    string healthplanTypeID, 
                    string eligibilityIndex, 
                    string pharmacyType, 
                    string open24Hours, 
                    string specialtyID, 
                    string extraQuery1, 
                    string extraQuery2, 
                    string extraQuery3, 
                    string extraQuery4) {
            this.PharmacySearchV4Async(credentials, accountRequest, postalCode, phoneNumber, streetName, pharmacyName, city, state, ncpdpID, healthplanID, healthplanTypeID, eligibilityIndex, pharmacyType, open24Hours, specialtyID, extraQuery1, extraQuery2, extraQuery3, extraQuery4, null);
        }
        
        /// <remarks/>
        public void PharmacySearchV4Async(
                    Credentials credentials, 
                    AccountRequest accountRequest, 
                    string postalCode, 
                    string phoneNumber, 
                    string streetName, 
                    string pharmacyName, 
                    string city, 
                    string state, 
                    string ncpdpID, 
                    string healthplanID, 
                    string healthplanTypeID, 
                    string eligibilityIndex, 
                    string pharmacyType, 
                    string open24Hours, 
                    string specialtyID, 
                    string extraQuery1, 
                    string extraQuery2, 
                    string extraQuery3, 
                    string extraQuery4, 
                    object userState) {
            if ((this.PharmacySearchV4OperationCompleted == null)) {
                this.PharmacySearchV4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPharmacySearchV4OperationCompleted);
            }
            this.InvokeAsync("PharmacySearchV4", new object[] {
                        credentials,
                        accountRequest,
                        postalCode,
                        phoneNumber,
                        streetName,
                        pharmacyName,
                        city,
                        state,
                        ncpdpID,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex,
                        pharmacyType,
                        open24Hours,
                        specialtyID,
                        extraQuery1,
                        extraQuery2,
                        extraQuery3,
                        extraQuery4}, this.PharmacySearchV4OperationCompleted, userState);
        }
        
        private void OnPharmacySearchV4OperationCompleted(object arg) {
            if ((this.PharmacySearchV4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PharmacySearchV4Completed(this, new PharmacySearchV4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/DrugSearchWithFormularyWithFavo" +
            "ritesV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DrugFormularyFavoriteDetailResult DrugSearchWithFormularyWithFavoritesV2(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string healthplanID, string healthplanTypeID, string eligibilityIndex, string drugName, string includeObsolete, string searchBrandGeneric, string searchRxOTC, string searchDrugSupply, string locationId, string providerId) {
            object[] results = this.Invoke("DrugSearchWithFormularyWithFavoritesV2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex,
                        drugName,
                        includeObsolete,
                        searchBrandGeneric,
                        searchRxOTC,
                        searchDrugSupply,
                        locationId,
                        providerId});
            return ((DrugFormularyFavoriteDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void DrugSearchWithFormularyWithFavoritesV2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string healthplanID, string healthplanTypeID, string eligibilityIndex, string drugName, string includeObsolete, string searchBrandGeneric, string searchRxOTC, string searchDrugSupply, string locationId, string providerId) {
            this.DrugSearchWithFormularyWithFavoritesV2Async(credentials, accountRequest, patientRequest, patientInformationRequester, healthplanID, healthplanTypeID, eligibilityIndex, drugName, includeObsolete, searchBrandGeneric, searchRxOTC, searchDrugSupply, locationId, providerId, null);
        }
        
        /// <remarks/>
        public void DrugSearchWithFormularyWithFavoritesV2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string healthplanID, string healthplanTypeID, string eligibilityIndex, string drugName, string includeObsolete, string searchBrandGeneric, string searchRxOTC, string searchDrugSupply, string locationId, string providerId, object userState) {
            if ((this.DrugSearchWithFormularyWithFavoritesV2OperationCompleted == null)) {
                this.DrugSearchWithFormularyWithFavoritesV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDrugSearchWithFormularyWithFavoritesV2OperationCompleted);
            }
            this.InvokeAsync("DrugSearchWithFormularyWithFavoritesV2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex,
                        drugName,
                        includeObsolete,
                        searchBrandGeneric,
                        searchRxOTC,
                        searchDrugSupply,
                        locationId,
                        providerId}, this.DrugSearchWithFormularyWithFavoritesV2OperationCompleted, userState);
        }
        
        private void OnDrugSearchWithFormularyWithFavoritesV2OperationCompleted(object arg) {
            if ((this.DrugSearchWithFormularyWithFavoritesV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DrugSearchWithFormularyWithFavoritesV2Completed(this, new DrugSearchWithFormularyWithFavoritesV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/DrugSearchWithFormularyWithFavo" +
            "ritesV3", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result DrugSearchWithFormularyWithFavoritesV3(
                    Credentials credentials, 
                    AccountRequest accountRequest, 
                    PatientRequest patientRequest, 
                    PatientInformationRequester patientInformationRequester, 
                    string healthplanId, 
                    string healthplanTypeId, 
                    string eligibilityIndex, 
                    string drugName, 
                    string drugTypeId, 
                    string includeObsolete, 
                    string searchBrandGeneric, 
                    string searchRxOTC, 
                    string searchDrugSupply, 
                    string locationId, 
                    string providerId, 
                    string includeCopay, 
                    string includeSchema) {
            object[] results = this.Invoke("DrugSearchWithFormularyWithFavoritesV3", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        healthplanId,
                        healthplanTypeId,
                        eligibilityIndex,
                        drugName,
                        drugTypeId,
                        includeObsolete,
                        searchBrandGeneric,
                        searchRxOTC,
                        searchDrugSupply,
                        locationId,
                        providerId,
                        includeCopay,
                        includeSchema});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void DrugSearchWithFormularyWithFavoritesV3Async(
                    Credentials credentials, 
                    AccountRequest accountRequest, 
                    PatientRequest patientRequest, 
                    PatientInformationRequester patientInformationRequester, 
                    string healthplanId, 
                    string healthplanTypeId, 
                    string eligibilityIndex, 
                    string drugName, 
                    string drugTypeId, 
                    string includeObsolete, 
                    string searchBrandGeneric, 
                    string searchRxOTC, 
                    string searchDrugSupply, 
                    string locationId, 
                    string providerId, 
                    string includeCopay, 
                    string includeSchema) {
            this.DrugSearchWithFormularyWithFavoritesV3Async(credentials, accountRequest, patientRequest, patientInformationRequester, healthplanId, healthplanTypeId, eligibilityIndex, drugName, drugTypeId, includeObsolete, searchBrandGeneric, searchRxOTC, searchDrugSupply, locationId, providerId, includeCopay, includeSchema, null);
        }
        
        /// <remarks/>
        public void DrugSearchWithFormularyWithFavoritesV3Async(
                    Credentials credentials, 
                    AccountRequest accountRequest, 
                    PatientRequest patientRequest, 
                    PatientInformationRequester patientInformationRequester, 
                    string healthplanId, 
                    string healthplanTypeId, 
                    string eligibilityIndex, 
                    string drugName, 
                    string drugTypeId, 
                    string includeObsolete, 
                    string searchBrandGeneric, 
                    string searchRxOTC, 
                    string searchDrugSupply, 
                    string locationId, 
                    string providerId, 
                    string includeCopay, 
                    string includeSchema, 
                    object userState) {
            if ((this.DrugSearchWithFormularyWithFavoritesV3OperationCompleted == null)) {
                this.DrugSearchWithFormularyWithFavoritesV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDrugSearchWithFormularyWithFavoritesV3OperationCompleted);
            }
            this.InvokeAsync("DrugSearchWithFormularyWithFavoritesV3", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        healthplanId,
                        healthplanTypeId,
                        eligibilityIndex,
                        drugName,
                        drugTypeId,
                        includeObsolete,
                        searchBrandGeneric,
                        searchRxOTC,
                        searchDrugSupply,
                        locationId,
                        providerId,
                        includeCopay,
                        includeSchema}, this.DrugSearchWithFormularyWithFavoritesV3OperationCompleted, userState);
        }
        
        private void OnDrugSearchWithFormularyWithFavoritesV3OperationCompleted(object arg) {
            if ((this.DrugSearchWithFormularyWithFavoritesV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DrugSearchWithFormularyWithFavoritesV3Completed(this, new DrugSearchWithFormularyWithFavoritesV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/HealthplanSearchV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HealthplanDetailResult HealthplanSearchV2(Credentials credentials, AccountRequest accountRequest, string healthplan, string state, string searchType, string resultOrder) {
            object[] results = this.Invoke("HealthplanSearchV2", new object[] {
                        credentials,
                        accountRequest,
                        healthplan,
                        state,
                        searchType,
                        resultOrder});
            return ((HealthplanDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void HealthplanSearchV2Async(Credentials credentials, AccountRequest accountRequest, string healthplan, string state, string searchType, string resultOrder) {
            this.HealthplanSearchV2Async(credentials, accountRequest, healthplan, state, searchType, resultOrder, null);
        }
        
        /// <remarks/>
        public void HealthplanSearchV2Async(Credentials credentials, AccountRequest accountRequest, string healthplan, string state, string searchType, string resultOrder, object userState) {
            if ((this.HealthplanSearchV2OperationCompleted == null)) {
                this.HealthplanSearchV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnHealthplanSearchV2OperationCompleted);
            }
            this.InvokeAsync("HealthplanSearchV2", new object[] {
                        credentials,
                        accountRequest,
                        healthplan,
                        state,
                        searchType,
                        resultOrder}, this.HealthplanSearchV2OperationCompleted, userState);
        }
        
        private void OnHealthplanSearchV2OperationCompleted(object arg) {
            if ((this.HealthplanSearchV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HealthplanSearchV2Completed(this, new HealthplanSearchV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/FormularyCoverageV3", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FormularyCoverageDetailResultV3 FormularyCoverageV3(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string healthplanID, string healthplanTypeID, string eligibilityIndex, string[] drugConcept, string drugConceptType) {
            object[] results = this.Invoke("FormularyCoverageV3", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex,
                        drugConcept,
                        drugConceptType});
            return ((FormularyCoverageDetailResultV3)(results[0]));
        }
        
        /// <remarks/>
        public void FormularyCoverageV3Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string healthplanID, string healthplanTypeID, string eligibilityIndex, string[] drugConcept, string drugConceptType) {
            this.FormularyCoverageV3Async(credentials, accountRequest, patientRequest, patientInformationRequester, healthplanID, healthplanTypeID, eligibilityIndex, drugConcept, drugConceptType, null);
        }
        
        /// <remarks/>
        public void FormularyCoverageV3Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string healthplanID, string healthplanTypeID, string eligibilityIndex, string[] drugConcept, string drugConceptType, object userState) {
            if ((this.FormularyCoverageV3OperationCompleted == null)) {
                this.FormularyCoverageV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFormularyCoverageV3OperationCompleted);
            }
            this.InvokeAsync("FormularyCoverageV3", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        healthplanID,
                        healthplanTypeID,
                        eligibilityIndex,
                        drugConcept,
                        drugConceptType}, this.FormularyCoverageV3OperationCompleted, userState);
        }
        
        private void OnFormularyCoverageV3OperationCompleted(object arg) {
            if ((this.FormularyCoverageV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FormularyCoverageV3Completed(this, new FormularyCoverageV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/ReportPrescribingCount", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result ReportPrescribingCount(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string reportType, string reportStartDate, string reportEndDate, string prescriptionType, string prescriptionCount) {
            object[] results = this.Invoke("ReportPrescribingCount", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        reportType,
                        reportStartDate,
                        reportEndDate,
                        prescriptionType,
                        prescriptionCount});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void ReportPrescribingCountAsync(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string reportType, string reportStartDate, string reportEndDate, string prescriptionType, string prescriptionCount) {
            this.ReportPrescribingCountAsync(credentials, accountRequest, patientInformationRequester, reportType, reportStartDate, reportEndDate, prescriptionType, prescriptionCount, null);
        }
        
        /// <remarks/>
        public void ReportPrescribingCountAsync(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string reportType, string reportStartDate, string reportEndDate, string prescriptionType, string prescriptionCount, object userState) {
            if ((this.ReportPrescribingCountOperationCompleted == null)) {
                this.ReportPrescribingCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportPrescribingCountOperationCompleted);
            }
            this.InvokeAsync("ReportPrescribingCount", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        reportType,
                        reportStartDate,
                        reportEndDate,
                        prescriptionType,
                        prescriptionCount}, this.ReportPrescribingCountOperationCompleted, userState);
        }
        
        private void OnReportPrescribingCountOperationCompleted(object arg) {
            if ((this.ReportPrescribingCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportPrescribingCountCompleted(this, new ReportPrescribingCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetCounselingMessages", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CounselingMessageDetailResult GetCounselingMessages(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string drugConcept, string drugStandardType) {
            object[] results = this.Invoke("GetCounselingMessages", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        drugConcept,
                        drugStandardType});
            return ((CounselingMessageDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetCounselingMessagesAsync(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string drugConcept, string drugStandardType) {
            this.GetCounselingMessagesAsync(credentials, accountRequest, patientInformationRequester, drugConcept, drugStandardType, null);
        }
        
        /// <remarks/>
        public void GetCounselingMessagesAsync(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string drugConcept, string drugStandardType, object userState) {
            if ((this.GetCounselingMessagesOperationCompleted == null)) {
                this.GetCounselingMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCounselingMessagesOperationCompleted);
            }
            this.InvokeAsync("GetCounselingMessages", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        drugConcept,
                        drugStandardType}, this.GetCounselingMessagesOperationCompleted, userState);
        }
        
        private void OnGetCounselingMessagesOperationCompleted(object arg) {
            if ((this.GetCounselingMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCounselingMessagesCompleted(this, new GetCounselingMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetSideEffects", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetSideEffects(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string drugConcept, string drugStandardType, string diseaseDescriptionType, string includeSchema, string sortOrder) {
            object[] results = this.Invoke("GetSideEffects", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        drugConcept,
                        drugStandardType,
                        diseaseDescriptionType,
                        includeSchema,
                        sortOrder});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetSideEffectsAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string drugConcept, string drugStandardType, string diseaseDescriptionType, string includeSchema, string sortOrder) {
            this.GetSideEffectsAsync(credentials, accountRequest, patientRequest, patientInformationRequester, drugConcept, drugStandardType, diseaseDescriptionType, includeSchema, sortOrder, null);
        }
        
        /// <remarks/>
        public void GetSideEffectsAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string drugConcept, string drugStandardType, string diseaseDescriptionType, string includeSchema, string sortOrder, object userState) {
            if ((this.GetSideEffectsOperationCompleted == null)) {
                this.GetSideEffectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSideEffectsOperationCompleted);
            }
            this.InvokeAsync("GetSideEffects", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        drugConcept,
                        drugStandardType,
                        diseaseDescriptionType,
                        includeSchema,
                        sortOrder}, this.GetSideEffectsOperationCompleted, userState);
        }
        
        private void OnGetSideEffectsOperationCompleted(object arg) {
            if ((this.GetSideEffectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSideEffectsCompleted(this, new GetSideEffectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetAccountStatusDetail", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetAccountStatusDetail(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string statusSectionType, string includeSchema, string sortOrder) {
            object[] results = this.Invoke("GetAccountStatusDetail", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        statusSectionType,
                        includeSchema,
                        sortOrder});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountStatusDetailAsync(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string statusSectionType, string includeSchema, string sortOrder) {
            this.GetAccountStatusDetailAsync(credentials, accountRequest, locationId, licensedPrescriberId, statusSectionType, includeSchema, sortOrder, null);
        }
        
        /// <remarks/>
        public void GetAccountStatusDetailAsync(Credentials credentials, AccountRequest accountRequest, string locationId, string licensedPrescriberId, string statusSectionType, string includeSchema, string sortOrder, object userState) {
            if ((this.GetAccountStatusDetailOperationCompleted == null)) {
                this.GetAccountStatusDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountStatusDetailOperationCompleted);
            }
            this.InvokeAsync("GetAccountStatusDetail", new object[] {
                        credentials,
                        accountRequest,
                        locationId,
                        licensedPrescriberId,
                        statusSectionType,
                        includeSchema,
                        sortOrder}, this.GetAccountStatusDetailOperationCompleted, userState);
        }
        
        private void OnGetAccountStatusDetailOperationCompleted(object arg) {
            if ((this.GetAccountStatusDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountStatusDetailCompleted(this, new GetAccountStatusDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPBMEligibilityV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EligibilityDetailResult GetPBMEligibilityV2(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string xmlIn, string includeSchema) {
            object[] results = this.Invoke("GetPBMEligibilityV2", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        xmlIn,
                        includeSchema});
            return ((EligibilityDetailResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPBMEligibilityV2Async(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string xmlIn, string includeSchema) {
            this.GetPBMEligibilityV2Async(credentials, accountRequest, patientInformationRequester, xmlIn, includeSchema, null);
        }
        
        /// <remarks/>
        public void GetPBMEligibilityV2Async(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string xmlIn, string includeSchema, object userState) {
            if ((this.GetPBMEligibilityV2OperationCompleted == null)) {
                this.GetPBMEligibilityV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPBMEligibilityV2OperationCompleted);
            }
            this.InvokeAsync("GetPBMEligibilityV2", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        xmlIn,
                        includeSchema}, this.GetPBMEligibilityV2OperationCompleted, userState);
        }
        
        private void OnGetPBMEligibilityV2OperationCompleted(object arg) {
            if ((this.GetPBMEligibilityV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPBMEligibilityV2Completed(this, new GetPBMEligibilityV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPBMEligibilityV3", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EligibilityDetailResultV3 GetPBMEligibilityV3(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string xmlIn, string includeSchema) {
            object[] results = this.Invoke("GetPBMEligibilityV3", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        xmlIn,
                        includeSchema});
            return ((EligibilityDetailResultV3)(results[0]));
        }
        
        /// <remarks/>
        public void GetPBMEligibilityV3Async(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string xmlIn, string includeSchema) {
            this.GetPBMEligibilityV3Async(credentials, accountRequest, patientInformationRequester, xmlIn, includeSchema, null);
        }
        
        /// <remarks/>
        public void GetPBMEligibilityV3Async(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string xmlIn, string includeSchema, object userState) {
            if ((this.GetPBMEligibilityV3OperationCompleted == null)) {
                this.GetPBMEligibilityV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPBMEligibilityV3OperationCompleted);
            }
            this.InvokeAsync("GetPBMEligibilityV3", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        xmlIn,
                        includeSchema}, this.GetPBMEligibilityV3OperationCompleted, userState);
        }
        
        private void OnGetPBMEligibilityV3OperationCompleted(object arg) {
            if ((this.GetPBMEligibilityV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPBMEligibilityV3Completed(this, new GetPBMEligibilityV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetPrescriptionTransmissionStat" +
            "usV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransmissionSummaryResult GetPrescriptionTransmissionStatusV2(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, PrescriptionTransmissionQueryType queryType, string queryId) {
            object[] results = this.Invoke("GetPrescriptionTransmissionStatusV2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        queryType,
                        queryId});
            return ((TransmissionSummaryResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrescriptionTransmissionStatusV2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, PrescriptionTransmissionQueryType queryType, string queryId) {
            this.GetPrescriptionTransmissionStatusV2Async(credentials, accountRequest, patientRequest, patientInformationRequester, queryType, queryId, null);
        }
        
        /// <remarks/>
        public void GetPrescriptionTransmissionStatusV2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, PrescriptionTransmissionQueryType queryType, string queryId, object userState) {
            if ((this.GetPrescriptionTransmissionStatusV2OperationCompleted == null)) {
                this.GetPrescriptionTransmissionStatusV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrescriptionTransmissionStatusV2OperationCompleted);
            }
            this.InvokeAsync("GetPrescriptionTransmissionStatusV2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        queryType,
                        queryId}, this.GetPrescriptionTransmissionStatusV2OperationCompleted, userState);
        }
        
        private void OnGetPrescriptionTransmissionStatusV2OperationCompleted(object arg) {
            if ((this.GetPrescriptionTransmissionStatusV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrescriptionTransmissionStatusV2Completed(this, new GetPrescriptionTransmissionStatusV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetSubmittedMessageTransactionS" +
            "tatus", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageTransactionStatusResult GetSubmittedMessageTransactionStatus(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string messageTransactionId, string messageTransactionSource) {
            object[] results = this.Invoke("GetSubmittedMessageTransactionStatus", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        messageTransactionId,
                        messageTransactionSource});
            return ((MessageTransactionStatusResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubmittedMessageTransactionStatusAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string messageTransactionId, string messageTransactionSource) {
            this.GetSubmittedMessageTransactionStatusAsync(credentials, accountRequest, patientRequest, patientInformationRequester, messageTransactionId, messageTransactionSource, null);
        }
        
        /// <remarks/>
        public void GetSubmittedMessageTransactionStatusAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string messageTransactionId, string messageTransactionSource, object userState) {
            if ((this.GetSubmittedMessageTransactionStatusOperationCompleted == null)) {
                this.GetSubmittedMessageTransactionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubmittedMessageTransactionStatusOperationCompleted);
            }
            this.InvokeAsync("GetSubmittedMessageTransactionStatus", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        messageTransactionId,
                        messageTransactionSource}, this.GetSubmittedMessageTransactionStatusOperationCompleted, userState);
        }
        
        private void OnGetSubmittedMessageTransactionStatusOperationCompleted(object arg) {
            if ((this.GetSubmittedMessageTransactionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubmittedMessageTransactionStatusCompleted(this, new GetSubmittedMessageTransactionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/DrugAllergyInteractionV2", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DrugAllergyDetailResultV2 DrugAllergyInteractionV2(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string[] allergies, string[] proposedMedications, string drugStandardType) {
            object[] results = this.Invoke("DrugAllergyInteractionV2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        allergies,
                        proposedMedications,
                        drugStandardType});
            return ((DrugAllergyDetailResultV2)(results[0]));
        }
        
        /// <remarks/>
        public void DrugAllergyInteractionV2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string[] allergies, string[] proposedMedications, string drugStandardType) {
            this.DrugAllergyInteractionV2Async(credentials, accountRequest, patientRequest, patientInformationRequester, allergies, proposedMedications, drugStandardType, null);
        }
        
        /// <remarks/>
        public void DrugAllergyInteractionV2Async(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string[] allergies, string[] proposedMedications, string drugStandardType, object userState) {
            if ((this.DrugAllergyInteractionV2OperationCompleted == null)) {
                this.DrugAllergyInteractionV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDrugAllergyInteractionV2OperationCompleted);
            }
            this.InvokeAsync("DrugAllergyInteractionV2", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        allergies,
                        proposedMedications,
                        drugStandardType}, this.DrugAllergyInteractionV2OperationCompleted, userState);
        }
        
        private void OnDrugAllergyInteractionV2OperationCompleted(object arg) {
            if ((this.DrugAllergyInteractionV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DrugAllergyInteractionV2Completed(this, new DrugAllergyInteractionV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/ResolveFailedPrescriptionTransm" +
            "ission", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result ResolveFailedPrescriptionTransmission(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string prescriptionType, string transactionId) {
            object[] results = this.Invoke("ResolveFailedPrescriptionTransmission", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        prescriptionType,
                        transactionId});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void ResolveFailedPrescriptionTransmissionAsync(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string prescriptionType, string transactionId) {
            this.ResolveFailedPrescriptionTransmissionAsync(credentials, accountRequest, patientInformationRequester, prescriptionType, transactionId, null);
        }
        
        /// <remarks/>
        public void ResolveFailedPrescriptionTransmissionAsync(Credentials credentials, AccountRequest accountRequest, PatientInformationRequester patientInformationRequester, string prescriptionType, string transactionId, object userState) {
            if ((this.ResolveFailedPrescriptionTransmissionOperationCompleted == null)) {
                this.ResolveFailedPrescriptionTransmissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResolveFailedPrescriptionTransmissionOperationCompleted);
            }
            this.InvokeAsync("ResolveFailedPrescriptionTransmission", new object[] {
                        credentials,
                        accountRequest,
                        patientInformationRequester,
                        prescriptionType,
                        transactionId}, this.ResolveFailedPrescriptionTransmissionOperationCompleted, userState);
        }
        
        private void OnResolveFailedPrescriptionTransmissionOperationCompleted(object arg) {
            if ((this.ResolveFailedPrescriptionTransmissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResolveFailedPrescriptionTransmissionCompleted(this, new ResolveFailedPrescriptionTransmissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/GetMeaningfulUsePatientEncounte" +
            "rInfo", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetMeaningfulUsePatientEncounterInfo(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string encounterId, string includeSchema) {
            object[] results = this.Invoke("GetMeaningfulUsePatientEncounterInfo", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        encounterId,
                        includeSchema});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeaningfulUsePatientEncounterInfoAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string encounterId, string includeSchema) {
            this.GetMeaningfulUsePatientEncounterInfoAsync(credentials, accountRequest, patientRequest, patientInformationRequester, encounterId, includeSchema, null);
        }
        
        /// <remarks/>
        public void GetMeaningfulUsePatientEncounterInfoAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string encounterId, string includeSchema, object userState) {
            if ((this.GetMeaningfulUsePatientEncounterInfoOperationCompleted == null)) {
                this.GetMeaningfulUsePatientEncounterInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeaningfulUsePatientEncounterInfoOperationCompleted);
            }
            this.InvokeAsync("GetMeaningfulUsePatientEncounterInfo", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        encounterId,
                        includeSchema}, this.GetMeaningfulUsePatientEncounterInfoOperationCompleted, userState);
        }
        
        private void OnGetMeaningfulUsePatientEncounterInfoOperationCompleted(object arg) {
            if ((this.GetMeaningfulUsePatientEncounterInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeaningfulUsePatientEncounterInfoCompleted(this, new GetMeaningfulUsePatientEncounterInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://secure.newcropaccounts.com/V7/webservices/DoseCheck", RequestNamespace="https://secure.newcropaccounts.com/V7/webservices", ResponseNamespace="https://secure.newcropaccounts.com/V7/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result DoseCheck(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string drugId, string drugTypeId, string birthDateCCYYMMDD, string gender, string diagnosis, string doseType, string dose, string doseUOM, string weightInKg, string includeSchema) {
            object[] results = this.Invoke("DoseCheck", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        drugId,
                        drugTypeId,
                        birthDateCCYYMMDD,
                        gender,
                        diagnosis,
                        doseType,
                        dose,
                        doseUOM,
                        weightInKg,
                        includeSchema});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void DoseCheckAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string drugId, string drugTypeId, string birthDateCCYYMMDD, string gender, string diagnosis, string doseType, string dose, string doseUOM, string weightInKg, string includeSchema) {
            this.DoseCheckAsync(credentials, accountRequest, patientRequest, patientInformationRequester, drugId, drugTypeId, birthDateCCYYMMDD, gender, diagnosis, doseType, dose, doseUOM, weightInKg, includeSchema, null);
        }
        
        /// <remarks/>
        public void DoseCheckAsync(Credentials credentials, AccountRequest accountRequest, PatientRequest patientRequest, PatientInformationRequester patientInformationRequester, string drugId, string drugTypeId, string birthDateCCYYMMDD, string gender, string diagnosis, string doseType, string dose, string doseUOM, string weightInKg, string includeSchema, object userState) {
            if ((this.DoseCheckOperationCompleted == null)) {
                this.DoseCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoseCheckOperationCompleted);
            }
            this.InvokeAsync("DoseCheck", new object[] {
                        credentials,
                        accountRequest,
                        patientRequest,
                        patientInformationRequester,
                        drugId,
                        drugTypeId,
                        birthDateCCYYMMDD,
                        gender,
                        diagnosis,
                        doseType,
                        dose,
                        doseUOM,
                        weightInKg,
                        includeSchema}, this.DoseCheckOperationCompleted, userState);
        }
        
        private void OnDoseCheckOperationCompleted(object arg) {
            if ((this.DoseCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoseCheckCompleted(this, new DoseCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class Credentials {
        
        private string partnerNameField;
        
        private string nameField;
        
        private string passwordField;
        
        /// <remarks/>
        public string PartnerName {
            get {
                return this.partnerNameField;
            }
            set {
                this.partnerNameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugAllergyDetailV2 {
        
        private string interactionTextField;
        
        private string drugField;
        
        private string drugIDField;
        
        private string drugTypeField;
        
        private string compositeAllergyIdField;
        
        private string sourceField;
        
        private string conceptIdField;
        
        private string conceptTypeField;
        
        private string descriptionField;
        
        private string performanceField;
        
        /// <remarks/>
        public string InteractionText {
            get {
                return this.interactionTextField;
            }
            set {
                this.interactionTextField = value;
            }
        }
        
        /// <remarks/>
        public string Drug {
            get {
                return this.drugField;
            }
            set {
                this.drugField = value;
            }
        }
        
        /// <remarks/>
        public string DrugID {
            get {
                return this.drugIDField;
            }
            set {
                this.drugIDField = value;
            }
        }
        
        /// <remarks/>
        public string DrugType {
            get {
                return this.drugTypeField;
            }
            set {
                this.drugTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CompositeAllergyId {
            get {
                return this.compositeAllergyIdField;
            }
            set {
                this.compositeAllergyIdField = value;
            }
        }
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string ConceptId {
            get {
                return this.conceptIdField;
            }
            set {
                this.conceptIdField = value;
            }
        }
        
        /// <remarks/>
        public string ConceptType {
            get {
                return this.conceptTypeField;
            }
            set {
                this.conceptTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Performance {
            get {
                return this.performanceField;
            }
            set {
                this.performanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugAllergyDetailResultV2 {
        
        private Result resultField;
        
        private DrugAllergyDetailV2[] drugAllergyDetailArrayV2Field;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public DrugAllergyDetailV2[] drugAllergyDetailArrayV2 {
            get {
                return this.drugAllergyDetailArrayV2Field;
            }
            set {
                this.drugAllergyDetailArrayV2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class Result {
        
        private StatusType statusField;
        
        private string messageField;
        
        private string xmlResponseField;
        
        private int rowCountField;
        
        private int timingField;
        
        /// <remarks/>
        public StatusType Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string XmlResponse {
            get {
                return this.xmlResponseField;
            }
            set {
                this.xmlResponseField = value;
            }
        }
        
        /// <remarks/>
        public int RowCount {
            get {
                return this.rowCountField;
            }
            set {
                this.rowCountField = value;
            }
        }
        
        /// <remarks/>
        public int Timing {
            get {
                return this.timingField;
            }
            set {
                this.timingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum StatusType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        Fail,
        
        /// <remarks/>
        NotFound,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class MessageTransactionStatusDetail {
        
        private string messageIdField;
        
        private string messageTransactionSourceField;
        
        private string messageTransactionSubSourceField;
        
        private string messageTransactionStateField;
        
        private string messageTimestampField;
        
        private string externalPatientIdField;
        
        private string externalUserIdField;
        
        private string externalUserIdTypeField;
        
        /// <remarks/>
        public string MessageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
        
        /// <remarks/>
        public string MessageTransactionSource {
            get {
                return this.messageTransactionSourceField;
            }
            set {
                this.messageTransactionSourceField = value;
            }
        }
        
        /// <remarks/>
        public string MessageTransactionSubSource {
            get {
                return this.messageTransactionSubSourceField;
            }
            set {
                this.messageTransactionSubSourceField = value;
            }
        }
        
        /// <remarks/>
        public string MessageTransactionState {
            get {
                return this.messageTransactionStateField;
            }
            set {
                this.messageTransactionStateField = value;
            }
        }
        
        /// <remarks/>
        public string MessageTimestamp {
            get {
                return this.messageTimestampField;
            }
            set {
                this.messageTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPatientId {
            get {
                return this.externalPatientIdField;
            }
            set {
                this.externalPatientIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalUserId {
            get {
                return this.externalUserIdField;
            }
            set {
                this.externalUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalUserIdType {
            get {
                return this.externalUserIdTypeField;
            }
            set {
                this.externalUserIdTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class MessageTransactionStatusResult {
        
        private Result resultField;
        
        private MessageTransactionStatusDetail messageTransactionStatusDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public MessageTransactionStatusDetail messageTransactionStatusDetail {
            get {
                return this.messageTransactionStatusDetailField;
            }
            set {
                this.messageTransactionStatusDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class EligibilityDetailV3 {
        
        private string sourceField;
        
        private string pBMField;
        
        private string planField;
        
        private string cardHolderField;
        
        private string cardHolderIDField;
        
        private string pharmacyBenefitField;
        
        private string mailOrderBenefitField;
        
        private string specialtyPharmacyBenefitField;
        
        private string lTCBenefitField;
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string PBM {
            get {
                return this.pBMField;
            }
            set {
                this.pBMField = value;
            }
        }
        
        /// <remarks/>
        public string Plan {
            get {
                return this.planField;
            }
            set {
                this.planField = value;
            }
        }
        
        /// <remarks/>
        public string CardHolder {
            get {
                return this.cardHolderField;
            }
            set {
                this.cardHolderField = value;
            }
        }
        
        /// <remarks/>
        public string CardHolderID {
            get {
                return this.cardHolderIDField;
            }
            set {
                this.cardHolderIDField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyBenefit {
            get {
                return this.pharmacyBenefitField;
            }
            set {
                this.pharmacyBenefitField = value;
            }
        }
        
        /// <remarks/>
        public string MailOrderBenefit {
            get {
                return this.mailOrderBenefitField;
            }
            set {
                this.mailOrderBenefitField = value;
            }
        }
        
        /// <remarks/>
        public string SpecialtyPharmacyBenefit {
            get {
                return this.specialtyPharmacyBenefitField;
            }
            set {
                this.specialtyPharmacyBenefitField = value;
            }
        }
        
        /// <remarks/>
        public string LTCBenefit {
            get {
                return this.lTCBenefitField;
            }
            set {
                this.lTCBenefitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class EligibilityDetailResultV3 {
        
        private Result resultField;
        
        private string eligibilityGuidField;
        
        private EligibilityDetailV3[] eligibilityDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string eligibilityGuid {
            get {
                return this.eligibilityGuidField;
            }
            set {
                this.eligibilityGuidField = value;
            }
        }
        
        /// <remarks/>
        public EligibilityDetailV3[] eligibilityDetailArray {
            get {
                return this.eligibilityDetailArrayField;
            }
            set {
                this.eligibilityDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class EligibilityDetail {
        
        private string sourceField;
        
        private string pBMField;
        
        private string planField;
        
        private string cardHolderField;
        
        private string cardHolderIDField;
        
        private string pharmacyBenefitField;
        
        private string mailOrderBenefitField;
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string PBM {
            get {
                return this.pBMField;
            }
            set {
                this.pBMField = value;
            }
        }
        
        /// <remarks/>
        public string Plan {
            get {
                return this.planField;
            }
            set {
                this.planField = value;
            }
        }
        
        /// <remarks/>
        public string CardHolder {
            get {
                return this.cardHolderField;
            }
            set {
                this.cardHolderField = value;
            }
        }
        
        /// <remarks/>
        public string CardHolderID {
            get {
                return this.cardHolderIDField;
            }
            set {
                this.cardHolderIDField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyBenefit {
            get {
                return this.pharmacyBenefitField;
            }
            set {
                this.pharmacyBenefitField = value;
            }
        }
        
        /// <remarks/>
        public string MailOrderBenefit {
            get {
                return this.mailOrderBenefitField;
            }
            set {
                this.mailOrderBenefitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class EligibilityDetailResult {
        
        private Result resultField;
        
        private string eligibilityGuidField;
        
        private EligibilityDetail[] eligibilityDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string eligibilityGuid {
            get {
                return this.eligibilityGuidField;
            }
            set {
                this.eligibilityGuidField = value;
            }
        }
        
        /// <remarks/>
        public EligibilityDetail[] eligibilityDetailArray {
            get {
                return this.eligibilityDetailArrayField;
            }
            set {
                this.eligibilityDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class CounselingMessageDetail {
        
        private string displayOrderField;
        
        private string professionalMessageField;
        
        private string patientMessageField;
        
        /// <remarks/>
        public string displayOrder {
            get {
                return this.displayOrderField;
            }
            set {
                this.displayOrderField = value;
            }
        }
        
        /// <remarks/>
        public string professionalMessage {
            get {
                return this.professionalMessageField;
            }
            set {
                this.professionalMessageField = value;
            }
        }
        
        /// <remarks/>
        public string patientMessage {
            get {
                return this.patientMessageField;
            }
            set {
                this.patientMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class CounselingMessageDetailResult {
        
        private Result resultField;
        
        private CounselingMessageDetail[] counselingMessageDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public CounselingMessageDetail[] counselingMessageDetail {
            get {
                return this.counselingMessageDetailField;
            }
            set {
                this.counselingMessageDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class FormularyCoverageDetailV3 {
        
        private string drugConceptField;
        
        private string formularyStatusField;
        
        private string formularyStatusDescField;
        
        private string therapeuticClassDescField;
        
        private string therapeuticSubClassDescField;
        
        /// <remarks/>
        public string drugConcept {
            get {
                return this.drugConceptField;
            }
            set {
                this.drugConceptField = value;
            }
        }
        
        /// <remarks/>
        public string formularyStatus {
            get {
                return this.formularyStatusField;
            }
            set {
                this.formularyStatusField = value;
            }
        }
        
        /// <remarks/>
        public string formularyStatusDesc {
            get {
                return this.formularyStatusDescField;
            }
            set {
                this.formularyStatusDescField = value;
            }
        }
        
        /// <remarks/>
        public string therapeuticClassDesc {
            get {
                return this.therapeuticClassDescField;
            }
            set {
                this.therapeuticClassDescField = value;
            }
        }
        
        /// <remarks/>
        public string therapeuticSubClassDesc {
            get {
                return this.therapeuticSubClassDescField;
            }
            set {
                this.therapeuticSubClassDescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class FormularyCoverageDetailResultV3 {
        
        private Result resultField;
        
        private FormularyCoverageDetailV3[] formularyCoverageDetailV3ArrayField;
        
        private FormularyCoverageDetailV3[] formularyCoverageAlternativesDetailV3ArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public FormularyCoverageDetailV3[] formularyCoverageDetailV3Array {
            get {
                return this.formularyCoverageDetailV3ArrayField;
            }
            set {
                this.formularyCoverageDetailV3ArrayField = value;
            }
        }
        
        /// <remarks/>
        public FormularyCoverageDetailV3[] formularyCoverageAlternativesDetailV3Array {
            get {
                return this.formularyCoverageAlternativesDetailV3ArrayField;
            }
            set {
                this.formularyCoverageAlternativesDetailV3ArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class HealthplanDetail {
        
        private string orgIdField;
        
        private string orgNameField;
        
        private string orgTypeField;
        
        /// <remarks/>
        public string orgId {
            get {
                return this.orgIdField;
            }
            set {
                this.orgIdField = value;
            }
        }
        
        /// <remarks/>
        public string orgName {
            get {
                return this.orgNameField;
            }
            set {
                this.orgNameField = value;
            }
        }
        
        /// <remarks/>
        public string orgType {
            get {
                return this.orgTypeField;
            }
            set {
                this.orgTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class HealthplanDetailResult {
        
        private Result resultField;
        
        private HealthplanDetail[] healthplanDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public HealthplanDetail[] healthplanDetail {
            get {
                return this.healthplanDetailField;
            }
            set {
                this.healthplanDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugFormularyFavoriteDetail {
        
        private string dataProviderField;
        
        private string drugField;
        
        private string drugIDField;
        
        private string drugSubID1Field;
        
        private string drugNameField;
        
        private string drugNameIDField;
        
        private string genericNameField;
        
        private string deaClassCodeField;
        
        private string dosageField;
        
        private string dosageFormField;
        
        private string routeField;
        
        private string statusField;
        
        private string therapeuticClassField;
        
        private string touchdateField;
        
        private string formularyCoverageField;
        
        private string formularyTextField;
        
        private string formularySummaryField;
        
        private string formularyMessageField;
        
        private string favoritesListStatusField;
        
        /// <remarks/>
        public string DataProvider {
            get {
                return this.dataProviderField;
            }
            set {
                this.dataProviderField = value;
            }
        }
        
        /// <remarks/>
        public string Drug {
            get {
                return this.drugField;
            }
            set {
                this.drugField = value;
            }
        }
        
        /// <remarks/>
        public string DrugID {
            get {
                return this.drugIDField;
            }
            set {
                this.drugIDField = value;
            }
        }
        
        /// <remarks/>
        public string DrugSubID1 {
            get {
                return this.drugSubID1Field;
            }
            set {
                this.drugSubID1Field = value;
            }
        }
        
        /// <remarks/>
        public string DrugName {
            get {
                return this.drugNameField;
            }
            set {
                this.drugNameField = value;
            }
        }
        
        /// <remarks/>
        public string DrugNameID {
            get {
                return this.drugNameIDField;
            }
            set {
                this.drugNameIDField = value;
            }
        }
        
        /// <remarks/>
        public string GenericName {
            get {
                return this.genericNameField;
            }
            set {
                this.genericNameField = value;
            }
        }
        
        /// <remarks/>
        public string DeaClassCode {
            get {
                return this.deaClassCodeField;
            }
            set {
                this.deaClassCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Dosage {
            get {
                return this.dosageField;
            }
            set {
                this.dosageField = value;
            }
        }
        
        /// <remarks/>
        public string DosageForm {
            get {
                return this.dosageFormField;
            }
            set {
                this.dosageFormField = value;
            }
        }
        
        /// <remarks/>
        public string Route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string TherapeuticClass {
            get {
                return this.therapeuticClassField;
            }
            set {
                this.therapeuticClassField = value;
            }
        }
        
        /// <remarks/>
        public string Touchdate {
            get {
                return this.touchdateField;
            }
            set {
                this.touchdateField = value;
            }
        }
        
        /// <remarks/>
        public string formularyCoverage {
            get {
                return this.formularyCoverageField;
            }
            set {
                this.formularyCoverageField = value;
            }
        }
        
        /// <remarks/>
        public string formularyText {
            get {
                return this.formularyTextField;
            }
            set {
                this.formularyTextField = value;
            }
        }
        
        /// <remarks/>
        public string formularySummary {
            get {
                return this.formularySummaryField;
            }
            set {
                this.formularySummaryField = value;
            }
        }
        
        /// <remarks/>
        public string formularyMessage {
            get {
                return this.formularyMessageField;
            }
            set {
                this.formularyMessageField = value;
            }
        }
        
        /// <remarks/>
        public string favoritesListStatus {
            get {
                return this.favoritesListStatusField;
            }
            set {
                this.favoritesListStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugFormularyFavoriteDetailResult {
        
        private Result resultField;
        
        private DrugFormularyFavoriteDetail[] drugFormularyFavoriteDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public DrugFormularyFavoriteDetail[] drugFormularyFavoriteDetail {
            get {
                return this.drugFormularyFavoriteDetailField;
            }
            set {
                this.drugFormularyFavoriteDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PharmacyDetailV4 {
        
        private string ncpdpIDField;
        
        private string nameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string phoneField;
        
        private string faxField;
        
        private string crossStreetField;
        
        private string pharmacyTypeField;
        
        private string pharmacyDetailTypeField;
        
        private string serviceLevelField;
        
        private string statusField;
        
        private string touchDateField;
        
        private string npiField;
        
        private string specialty1Field;
        
        private string specialty2Field;
        
        private string specialty3Field;
        
        private string specialty4Field;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        /// <remarks/>
        public string ncpdpID {
            get {
                return this.ncpdpIDField;
            }
            set {
                this.ncpdpIDField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string crossStreet {
            get {
                return this.crossStreetField;
            }
            set {
                this.crossStreetField = value;
            }
        }
        
        /// <remarks/>
        public string pharmacyType {
            get {
                return this.pharmacyTypeField;
            }
            set {
                this.pharmacyTypeField = value;
            }
        }
        
        /// <remarks/>
        public string pharmacyDetailType {
            get {
                return this.pharmacyDetailTypeField;
            }
            set {
                this.pharmacyDetailTypeField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLevel {
            get {
                return this.serviceLevelField;
            }
            set {
                this.serviceLevelField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string touchDate {
            get {
                return this.touchDateField;
            }
            set {
                this.touchDateField = value;
            }
        }
        
        /// <remarks/>
        public string npi {
            get {
                return this.npiField;
            }
            set {
                this.npiField = value;
            }
        }
        
        /// <remarks/>
        public string specialty1 {
            get {
                return this.specialty1Field;
            }
            set {
                this.specialty1Field = value;
            }
        }
        
        /// <remarks/>
        public string specialty2 {
            get {
                return this.specialty2Field;
            }
            set {
                this.specialty2Field = value;
            }
        }
        
        /// <remarks/>
        public string specialty3 {
            get {
                return this.specialty3Field;
            }
            set {
                this.specialty3Field = value;
            }
        }
        
        /// <remarks/>
        public string specialty4 {
            get {
                return this.specialty4Field;
            }
            set {
                this.specialty4Field = value;
            }
        }
        
        /// <remarks/>
        public string spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PharmacyDetailResultV4 {
        
        private Result resultField;
        
        private PharmacyDetailV4[] pharmacyDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public PharmacyDetailV4[] pharmacyDetailArray {
            get {
                return this.pharmacyDetailArrayField;
            }
            set {
                this.pharmacyDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PharmacyDetailV2 {
        
        private string ncpdpIDField;
        
        private string nameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string phoneField;
        
        private string faxField;
        
        private string crossStreetField;
        
        private string pharmacyTypeField;
        
        private string pharmacyDetailTypeField;
        
        private string statusField;
        
        private string touchDateField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        /// <remarks/>
        public string ncpdpID {
            get {
                return this.ncpdpIDField;
            }
            set {
                this.ncpdpIDField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string crossStreet {
            get {
                return this.crossStreetField;
            }
            set {
                this.crossStreetField = value;
            }
        }
        
        /// <remarks/>
        public string pharmacyType {
            get {
                return this.pharmacyTypeField;
            }
            set {
                this.pharmacyTypeField = value;
            }
        }
        
        /// <remarks/>
        public string pharmacyDetailType {
            get {
                return this.pharmacyDetailTypeField;
            }
            set {
                this.pharmacyDetailTypeField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string touchDate {
            get {
                return this.touchDateField;
            }
            set {
                this.touchDateField = value;
            }
        }
        
        /// <remarks/>
        public string spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PharmacyDetailResultV2 {
        
        private Result resultField;
        
        private PharmacyDetailV2[] pharmacyDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public PharmacyDetailV2[] pharmacyDetailArray {
            get {
                return this.pharmacyDetailArrayField;
            }
            set {
                this.pharmacyDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugDiseaseDetail {
        
        private string drugNameField;
        
        private string iCD9Field;
        
        private string directConditionField;
        
        private string relatedConditionField;
        
        private string severityLevelField;
        
        private string severityLevelTextField;
        
        private string severityLevelShortTextField;
        
        private string diseaseRelationField;
        
        private string diseaseRelationTextField;
        
        /// <remarks/>
        public string DrugName {
            get {
                return this.drugNameField;
            }
            set {
                this.drugNameField = value;
            }
        }
        
        /// <remarks/>
        public string ICD9 {
            get {
                return this.iCD9Field;
            }
            set {
                this.iCD9Field = value;
            }
        }
        
        /// <remarks/>
        public string DirectCondition {
            get {
                return this.directConditionField;
            }
            set {
                this.directConditionField = value;
            }
        }
        
        /// <remarks/>
        public string RelatedCondition {
            get {
                return this.relatedConditionField;
            }
            set {
                this.relatedConditionField = value;
            }
        }
        
        /// <remarks/>
        public string SeverityLevel {
            get {
                return this.severityLevelField;
            }
            set {
                this.severityLevelField = value;
            }
        }
        
        /// <remarks/>
        public string SeverityLevelText {
            get {
                return this.severityLevelTextField;
            }
            set {
                this.severityLevelTextField = value;
            }
        }
        
        /// <remarks/>
        public string SeverityLevelShortText {
            get {
                return this.severityLevelShortTextField;
            }
            set {
                this.severityLevelShortTextField = value;
            }
        }
        
        /// <remarks/>
        public string DiseaseRelation {
            get {
                return this.diseaseRelationField;
            }
            set {
                this.diseaseRelationField = value;
            }
        }
        
        /// <remarks/>
        public string DiseaseRelationText {
            get {
                return this.diseaseRelationTextField;
            }
            set {
                this.diseaseRelationTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugDiseaseDetailResult {
        
        private Result resultField;
        
        private DrugDiseaseDetail[] drugDiseaseDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public DrugDiseaseDetail[] drugDiseaseDetailArray {
            get {
                return this.drugDiseaseDetailArrayField;
            }
            set {
                this.drugDiseaseDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DownloadDetail {
        
        private string latestDownloadMonthField;
        
        private string latestDownloadDayField;
        
        private string latestDownloadYearField;
        
        private string latestDownloadSizeField;
        
        private string latestDownloadUrlField;
        
        private string cchitDrugDatabaseDateField;
        
        private string commentsField;
        
        /// <remarks/>
        public string LatestDownloadMonth {
            get {
                return this.latestDownloadMonthField;
            }
            set {
                this.latestDownloadMonthField = value;
            }
        }
        
        /// <remarks/>
        public string LatestDownloadDay {
            get {
                return this.latestDownloadDayField;
            }
            set {
                this.latestDownloadDayField = value;
            }
        }
        
        /// <remarks/>
        public string LatestDownloadYear {
            get {
                return this.latestDownloadYearField;
            }
            set {
                this.latestDownloadYearField = value;
            }
        }
        
        /// <remarks/>
        public string LatestDownloadSize {
            get {
                return this.latestDownloadSizeField;
            }
            set {
                this.latestDownloadSizeField = value;
            }
        }
        
        /// <remarks/>
        public string LatestDownloadUrl {
            get {
                return this.latestDownloadUrlField;
            }
            set {
                this.latestDownloadUrlField = value;
            }
        }
        
        /// <remarks/>
        public string CchitDrugDatabaseDate {
            get {
                return this.cchitDrugDatabaseDateField;
            }
            set {
                this.cchitDrugDatabaseDateField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DownloadDetailResult {
        
        private Result resultField;
        
        private DownloadDetail downloadDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public DownloadDetail downloadDetail {
            get {
                return this.downloadDetailField;
            }
            set {
                this.downloadDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugHistoryDetail {
        
        private string drugInfoField;
        
        private string drugNdcField;
        
        private string doctorLastNameField;
        
        private string doctorFirstNameField;
        
        private string doctorContactNumberField;
        
        private string pharmacyNameField;
        
        private string pharmacyContactNumberField;
        
        private string fillDateField;
        
        private string sourceField;
        
        private string healthplanNameField;
        
        private string drugIdField;
        
        private string drugQuantityField;
        
        /// <remarks/>
        public string DrugInfo {
            get {
                return this.drugInfoField;
            }
            set {
                this.drugInfoField = value;
            }
        }
        
        /// <remarks/>
        public string DrugNdc {
            get {
                return this.drugNdcField;
            }
            set {
                this.drugNdcField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorLastName {
            get {
                return this.doctorLastNameField;
            }
            set {
                this.doctorLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorFirstName {
            get {
                return this.doctorFirstNameField;
            }
            set {
                this.doctorFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorContactNumber {
            get {
                return this.doctorContactNumberField;
            }
            set {
                this.doctorContactNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyName {
            get {
                return this.pharmacyNameField;
            }
            set {
                this.pharmacyNameField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyContactNumber {
            get {
                return this.pharmacyContactNumberField;
            }
            set {
                this.pharmacyContactNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FillDate {
            get {
                return this.fillDateField;
            }
            set {
                this.fillDateField = value;
            }
        }
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string HealthplanName {
            get {
                return this.healthplanNameField;
            }
            set {
                this.healthplanNameField = value;
            }
        }
        
        /// <remarks/>
        public string DrugId {
            get {
                return this.drugIdField;
            }
            set {
                this.drugIdField = value;
            }
        }
        
        /// <remarks/>
        public string DrugQuantity {
            get {
                return this.drugQuantityField;
            }
            set {
                this.drugQuantityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugHistoryDetailResult {
        
        private Result resultField;
        
        private DrugHistoryDetail[] drugHistoryDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public DrugHistoryDetail[] drugHistoryDetailArray {
            get {
                return this.drugHistoryDetailArrayField;
            }
            set {
                this.drugHistoryDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugDetail {
        
        private string dataProviderField;
        
        private string drugField;
        
        private string drugIDField;
        
        private string drugSubID1Field;
        
        private string drugNameField;
        
        private string drugNameIDField;
        
        private string genericNameField;
        
        private string deaClassCodeField;
        
        private string dosageField;
        
        private string dosageFormField;
        
        private string routeField;
        
        private string statusField;
        
        private string therapeuticClassField;
        
        private string deaGenericNamedCodeField;
        
        private string deaGenericNamedDescriptionField;
        
        private string deaLegendCodeField;
        
        private string deaLegendDescriptionField;
        
        private string touchdateField;
        
        /// <remarks/>
        public string DataProvider {
            get {
                return this.dataProviderField;
            }
            set {
                this.dataProviderField = value;
            }
        }
        
        /// <remarks/>
        public string Drug {
            get {
                return this.drugField;
            }
            set {
                this.drugField = value;
            }
        }
        
        /// <remarks/>
        public string DrugID {
            get {
                return this.drugIDField;
            }
            set {
                this.drugIDField = value;
            }
        }
        
        /// <remarks/>
        public string DrugSubID1 {
            get {
                return this.drugSubID1Field;
            }
            set {
                this.drugSubID1Field = value;
            }
        }
        
        /// <remarks/>
        public string DrugName {
            get {
                return this.drugNameField;
            }
            set {
                this.drugNameField = value;
            }
        }
        
        /// <remarks/>
        public string DrugNameID {
            get {
                return this.drugNameIDField;
            }
            set {
                this.drugNameIDField = value;
            }
        }
        
        /// <remarks/>
        public string GenericName {
            get {
                return this.genericNameField;
            }
            set {
                this.genericNameField = value;
            }
        }
        
        /// <remarks/>
        public string DeaClassCode {
            get {
                return this.deaClassCodeField;
            }
            set {
                this.deaClassCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Dosage {
            get {
                return this.dosageField;
            }
            set {
                this.dosageField = value;
            }
        }
        
        /// <remarks/>
        public string DosageForm {
            get {
                return this.dosageFormField;
            }
            set {
                this.dosageFormField = value;
            }
        }
        
        /// <remarks/>
        public string Route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string TherapeuticClass {
            get {
                return this.therapeuticClassField;
            }
            set {
                this.therapeuticClassField = value;
            }
        }
        
        /// <remarks/>
        public string DeaGenericNamedCode {
            get {
                return this.deaGenericNamedCodeField;
            }
            set {
                this.deaGenericNamedCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeaGenericNamedDescription {
            get {
                return this.deaGenericNamedDescriptionField;
            }
            set {
                this.deaGenericNamedDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DeaLegendCode {
            get {
                return this.deaLegendCodeField;
            }
            set {
                this.deaLegendCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeaLegendDescription {
            get {
                return this.deaLegendDescriptionField;
            }
            set {
                this.deaLegendDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Touchdate {
            get {
                return this.touchdateField;
            }
            set {
                this.touchdateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugFormularyDetail {
        
        private DrugDetail drugDetailField;
        
        private string formularyCoverageField;
        
        /// <remarks/>
        public DrugDetail drugDetail {
            get {
                return this.drugDetailField;
            }
            set {
                this.drugDetailField = value;
            }
        }
        
        /// <remarks/>
        public string formularyCoverage {
            get {
                return this.formularyCoverageField;
            }
            set {
                this.formularyCoverageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class DrugFormularyDetailResult {
        
        private Result resultField;
        
        private DrugFormularyDetail[] drugFormularyDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public DrugFormularyDetail[] drugFormularyDetailArray {
            get {
                return this.drugFormularyDetailArrayField;
            }
            set {
                this.drugFormularyDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalResponseDetail {
        
        private string renewalRequestIdentifierField;
        
        private string statusField;
        
        private string messageField;
        
        private string sentTimestampField;
        
        /// <remarks/>
        public string RenewalRequestIdentifier {
            get {
                return this.renewalRequestIdentifierField;
            }
            set {
                this.renewalRequestIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string SentTimestamp {
            get {
                return this.sentTimestampField;
            }
            set {
                this.sentTimestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalResponseDetailResult {
        
        private Result resultField;
        
        private RenewalResponseDetail renewalResponseDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RenewalResponseDetail renewalResponseDetail {
            get {
                return this.renewalResponseDetailField;
            }
            set {
                this.renewalResponseDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalDetailResultV4 {
        
        private Result resultField;
        
        private RenewalDetailV4 renewalDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RenewalDetailV4 renewalDetail {
            get {
                return this.renewalDetailField;
            }
            set {
                this.renewalDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalDetailV4 {
        
        private string formatTypeField;
        
        private string formatVersionField;
        
        private string compressionTypeField;
        
        private string renewalRequestGuidField;
        
        private string receivedTimestampField;
        
        private string externalLocationIdField;
        
        private string externalDoctorIdField;
        
        private string externalPatientIdField;
        
        private string externalPrescriptionIdField;
        
        private string ncpdpIdField;
        
        private string prescriberOrderNumberField;
        
        private string rxReferenceNumberField;
        
        private string locationNameField;
        
        private string prescriberFullNameField;
        
        private string prescriberPhoneNumberField;
        
        private string prescriberContactNumbersField;
        
        private string pharmacyInfoField;
        
        private string pharmacyFullInfoField;
        
        private string pharmacyStoreNameField;
        
        private string patientFirstNameField;
        
        private string patientMiddleNameField;
        
        private string patientLastNameField;
        
        private string patientSuffixField;
        
        private string patientDOBField;
        
        private string patientGenderField;
        
        private string patientAddressLine1Field;
        
        private string patientAddressLine2Field;
        
        private string patientAddressCityField;
        
        private string patientAddressStateField;
        
        private string patientAddressZipCodeField;
        
        private string patientPhoneNumberField;
        
        private string patientContactNumbersField;
        
        private string nDCField;
        
        private string drugInfoField;
        
        private string numberOfRefillsField;
        
        private string refillQualifierField;
        
        private string quantityField;
        
        private string quantityQualifierField;
        
        private string potencyUnitCodeField;
        
        private string sigField;
        
        private string pharmacistMessageField;
        
        private string substitutionAllowedField;
        
        private string writtenDateField;
        
        private string lastFillDateField;
        
        private string diagnosisCodesField;
        
        private string priorAuthorizationNumberField;
        
        private string priorAuthorizationQualifierField;
        
        private string dispensedNDCField;
        
        private string dispensedDrugInfoField;
        
        private string dispensedNumberOfRefillsField;
        
        private string dispensedRefillQualifierField;
        
        private string dispensedQuantityField;
        
        private string dispensedQuantityQualifierField;
        
        private string dispensedPotencyUnitCodeField;
        
        private string dispensedSigField;
        
        private string dispensedPharmacistMessageField;
        
        private string dispensedSubstitutionAllowedField;
        
        private string dispensedWrittenDateField;
        
        private string dispensedLastFillDateField;
        
        private string dispensedDiagnosisCodesField;
        
        private string dispensedPriorAuthorizationNumberField;
        
        private string dispensedPriorAuthorizationQualifierField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        private string spare4Field;
        
        private string spare5Field;
        
        private string spare6Field;
        
        /// <remarks/>
        public string FormatType {
            get {
                return this.formatTypeField;
            }
            set {
                this.formatTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FormatVersion {
            get {
                return this.formatVersionField;
            }
            set {
                this.formatVersionField = value;
            }
        }
        
        /// <remarks/>
        public string CompressionType {
            get {
                return this.compressionTypeField;
            }
            set {
                this.compressionTypeField = value;
            }
        }
        
        /// <remarks/>
        public string RenewalRequestGuid {
            get {
                return this.renewalRequestGuidField;
            }
            set {
                this.renewalRequestGuidField = value;
            }
        }
        
        /// <remarks/>
        public string ReceivedTimestamp {
            get {
                return this.receivedTimestampField;
            }
            set {
                this.receivedTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalLocationId {
            get {
                return this.externalLocationIdField;
            }
            set {
                this.externalLocationIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalDoctorId {
            get {
                return this.externalDoctorIdField;
            }
            set {
                this.externalDoctorIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPatientId {
            get {
                return this.externalPatientIdField;
            }
            set {
                this.externalPatientIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPrescriptionId {
            get {
                return this.externalPrescriptionIdField;
            }
            set {
                this.externalPrescriptionIdField = value;
            }
        }
        
        /// <remarks/>
        public string NcpdpId {
            get {
                return this.ncpdpIdField;
            }
            set {
                this.ncpdpIdField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriberOrderNumber {
            get {
                return this.prescriberOrderNumberField;
            }
            set {
                this.prescriberOrderNumberField = value;
            }
        }
        
        /// <remarks/>
        public string RxReferenceNumber {
            get {
                return this.rxReferenceNumberField;
            }
            set {
                this.rxReferenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string LocationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriberFullName {
            get {
                return this.prescriberFullNameField;
            }
            set {
                this.prescriberFullNameField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriberPhoneNumber {
            get {
                return this.prescriberPhoneNumberField;
            }
            set {
                this.prescriberPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriberContactNumbers {
            get {
                return this.prescriberContactNumbersField;
            }
            set {
                this.prescriberContactNumbersField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyInfo {
            get {
                return this.pharmacyInfoField;
            }
            set {
                this.pharmacyInfoField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyFullInfo {
            get {
                return this.pharmacyFullInfoField;
            }
            set {
                this.pharmacyFullInfoField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyStoreName {
            get {
                return this.pharmacyStoreNameField;
            }
            set {
                this.pharmacyStoreNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientFirstName {
            get {
                return this.patientFirstNameField;
            }
            set {
                this.patientFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientMiddleName {
            get {
                return this.patientMiddleNameField;
            }
            set {
                this.patientMiddleNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientLastName {
            get {
                return this.patientLastNameField;
            }
            set {
                this.patientLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientSuffix {
            get {
                return this.patientSuffixField;
            }
            set {
                this.patientSuffixField = value;
            }
        }
        
        /// <remarks/>
        public string PatientDOB {
            get {
                return this.patientDOBField;
            }
            set {
                this.patientDOBField = value;
            }
        }
        
        /// <remarks/>
        public string PatientGender {
            get {
                return this.patientGenderField;
            }
            set {
                this.patientGenderField = value;
            }
        }
        
        /// <remarks/>
        public string PatientAddressLine1 {
            get {
                return this.patientAddressLine1Field;
            }
            set {
                this.patientAddressLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string PatientAddressLine2 {
            get {
                return this.patientAddressLine2Field;
            }
            set {
                this.patientAddressLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string PatientAddressCity {
            get {
                return this.patientAddressCityField;
            }
            set {
                this.patientAddressCityField = value;
            }
        }
        
        /// <remarks/>
        public string PatientAddressState {
            get {
                return this.patientAddressStateField;
            }
            set {
                this.patientAddressStateField = value;
            }
        }
        
        /// <remarks/>
        public string PatientAddressZipCode {
            get {
                return this.patientAddressZipCodeField;
            }
            set {
                this.patientAddressZipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PatientPhoneNumber {
            get {
                return this.patientPhoneNumberField;
            }
            set {
                this.patientPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PatientContactNumbers {
            get {
                return this.patientContactNumbersField;
            }
            set {
                this.patientContactNumbersField = value;
            }
        }
        
        /// <remarks/>
        public string NDC {
            get {
                return this.nDCField;
            }
            set {
                this.nDCField = value;
            }
        }
        
        /// <remarks/>
        public string DrugInfo {
            get {
                return this.drugInfoField;
            }
            set {
                this.drugInfoField = value;
            }
        }
        
        /// <remarks/>
        public string NumberOfRefills {
            get {
                return this.numberOfRefillsField;
            }
            set {
                this.numberOfRefillsField = value;
            }
        }
        
        /// <remarks/>
        public string RefillQualifier {
            get {
                return this.refillQualifierField;
            }
            set {
                this.refillQualifierField = value;
            }
        }
        
        /// <remarks/>
        public string Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public string QuantityQualifier {
            get {
                return this.quantityQualifierField;
            }
            set {
                this.quantityQualifierField = value;
            }
        }
        
        /// <remarks/>
        public string PotencyUnitCode {
            get {
                return this.potencyUnitCodeField;
            }
            set {
                this.potencyUnitCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Sig {
            get {
                return this.sigField;
            }
            set {
                this.sigField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacistMessage {
            get {
                return this.pharmacistMessageField;
            }
            set {
                this.pharmacistMessageField = value;
            }
        }
        
        /// <remarks/>
        public string SubstitutionAllowed {
            get {
                return this.substitutionAllowedField;
            }
            set {
                this.substitutionAllowedField = value;
            }
        }
        
        /// <remarks/>
        public string WrittenDate {
            get {
                return this.writtenDateField;
            }
            set {
                this.writtenDateField = value;
            }
        }
        
        /// <remarks/>
        public string LastFillDate {
            get {
                return this.lastFillDateField;
            }
            set {
                this.lastFillDateField = value;
            }
        }
        
        /// <remarks/>
        public string DiagnosisCodes {
            get {
                return this.diagnosisCodesField;
            }
            set {
                this.diagnosisCodesField = value;
            }
        }
        
        /// <remarks/>
        public string PriorAuthorizationNumber {
            get {
                return this.priorAuthorizationNumberField;
            }
            set {
                this.priorAuthorizationNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PriorAuthorizationQualifier {
            get {
                return this.priorAuthorizationQualifierField;
            }
            set {
                this.priorAuthorizationQualifierField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedNDC {
            get {
                return this.dispensedNDCField;
            }
            set {
                this.dispensedNDCField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedDrugInfo {
            get {
                return this.dispensedDrugInfoField;
            }
            set {
                this.dispensedDrugInfoField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedNumberOfRefills {
            get {
                return this.dispensedNumberOfRefillsField;
            }
            set {
                this.dispensedNumberOfRefillsField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedRefillQualifier {
            get {
                return this.dispensedRefillQualifierField;
            }
            set {
                this.dispensedRefillQualifierField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedQuantity {
            get {
                return this.dispensedQuantityField;
            }
            set {
                this.dispensedQuantityField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedQuantityQualifier {
            get {
                return this.dispensedQuantityQualifierField;
            }
            set {
                this.dispensedQuantityQualifierField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedPotencyUnitCode {
            get {
                return this.dispensedPotencyUnitCodeField;
            }
            set {
                this.dispensedPotencyUnitCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedSig {
            get {
                return this.dispensedSigField;
            }
            set {
                this.dispensedSigField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedPharmacistMessage {
            get {
                return this.dispensedPharmacistMessageField;
            }
            set {
                this.dispensedPharmacistMessageField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedSubstitutionAllowed {
            get {
                return this.dispensedSubstitutionAllowedField;
            }
            set {
                this.dispensedSubstitutionAllowedField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedWrittenDate {
            get {
                return this.dispensedWrittenDateField;
            }
            set {
                this.dispensedWrittenDateField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedLastFillDate {
            get {
                return this.dispensedLastFillDateField;
            }
            set {
                this.dispensedLastFillDateField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedDiagnosisCodes {
            get {
                return this.dispensedDiagnosisCodesField;
            }
            set {
                this.dispensedDiagnosisCodesField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedPriorAuthorizationNumber {
            get {
                return this.dispensedPriorAuthorizationNumberField;
            }
            set {
                this.dispensedPriorAuthorizationNumberField = value;
            }
        }
        
        /// <remarks/>
        public string DispensedPriorAuthorizationQualifier {
            get {
                return this.dispensedPriorAuthorizationQualifierField;
            }
            set {
                this.dispensedPriorAuthorizationQualifierField = value;
            }
        }
        
        /// <remarks/>
        public string Spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare4 {
            get {
                return this.spare4Field;
            }
            set {
                this.spare4Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare5 {
            get {
                return this.spare5Field;
            }
            set {
                this.spare5Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare6 {
            get {
                return this.spare6Field;
            }
            set {
                this.spare6Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PrescriptionRenewalRequestType {
        
        private string pharmacyIdentifierField;
        
        private string drugNDCField;
        
        private string drugField;
        
        private string dispenseNumberField;
        
        private string dosageField;
        
        private string lastFillDateField;
        
        private string writtenDateField;
        
        private string daysSupplyField;
        
        private DrugSubstitutionType substitutionField;
        
        private string refillsField;
        
        private string pharmacistMessageField;
        
        private string idField;
        
        /// <remarks/>
        public string pharmacyIdentifier {
            get {
                return this.pharmacyIdentifierField;
            }
            set {
                this.pharmacyIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string drugNDC {
            get {
                return this.drugNDCField;
            }
            set {
                this.drugNDCField = value;
            }
        }
        
        /// <remarks/>
        public string drug {
            get {
                return this.drugField;
            }
            set {
                this.drugField = value;
            }
        }
        
        /// <remarks/>
        public string dispenseNumber {
            get {
                return this.dispenseNumberField;
            }
            set {
                this.dispenseNumberField = value;
            }
        }
        
        /// <remarks/>
        public string dosage {
            get {
                return this.dosageField;
            }
            set {
                this.dosageField = value;
            }
        }
        
        /// <remarks/>
        public string lastFillDate {
            get {
                return this.lastFillDateField;
            }
            set {
                this.lastFillDateField = value;
            }
        }
        
        /// <remarks/>
        public string writtenDate {
            get {
                return this.writtenDateField;
            }
            set {
                this.writtenDateField = value;
            }
        }
        
        /// <remarks/>
        public string daysSupply {
            get {
                return this.daysSupplyField;
            }
            set {
                this.daysSupplyField = value;
            }
        }
        
        /// <remarks/>
        public DrugSubstitutionType substitution {
            get {
                return this.substitutionField;
            }
            set {
                this.substitutionField = value;
            }
        }
        
        /// <remarks/>
        public string refills {
            get {
                return this.refillsField;
            }
            set {
                this.refillsField = value;
            }
        }
        
        /// <remarks/>
        public string pharmacistMessage {
            get {
                return this.pharmacistMessageField;
            }
            set {
                this.pharmacistMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum DrugSubstitutionType {
        
        /// <remarks/>
        DispenseAsWritten,
        
        /// <remarks/>
        SubstitutionAllowed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientPharmacyType {
        
        private string pharmacyIdentifierField;
        
        /// <remarks/>
        public string pharmacyIdentifier {
            get {
                return this.pharmacyIdentifierField;
            }
            set {
                this.pharmacyIdentifierField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientFormularyType {
        
        private string eligibilityGuidField;
        
        private string eligibilityIndexField;
        
        private string drugIdentifierField;
        
        private DrugDatabaseType drugIdentifierTypeField;
        
        private bool drugIdentifierTypeFieldSpecified;
        
        private string statusDisplayedField;
        
        /// <remarks/>
        public string eligibilityGuid {
            get {
                return this.eligibilityGuidField;
            }
            set {
                this.eligibilityGuidField = value;
            }
        }
        
        /// <remarks/>
        public string eligibilityIndex {
            get {
                return this.eligibilityIndexField;
            }
            set {
                this.eligibilityIndexField = value;
            }
        }
        
        /// <remarks/>
        public string drugIdentifier {
            get {
                return this.drugIdentifierField;
            }
            set {
                this.drugIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public DrugDatabaseType drugIdentifierType {
            get {
                return this.drugIdentifierTypeField;
            }
            set {
                this.drugIdentifierTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool drugIdentifierTypeSpecified {
            get {
                return this.drugIdentifierTypeFieldSpecified;
            }
            set {
                this.drugIdentifierTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string statusDisplayed {
            get {
                return this.statusDisplayedField;
            }
            set {
                this.statusDisplayedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum DrugDatabaseType {
        
        /// <remarks/>
        FDA,
        
        /// <remarks/>
        FDB,
        
        /// <remarks/>
        RXNORM,
        
        /// <remarks/>
        Z,
        
        /// <remarks/>
        Y,
        
        /// <remarks/>
        MULTUM,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientAllergyFreeformType {
        
        private string allergyNameField;
        
        private AllergySeverityType allergySeverityTypeIDField;
        
        private bool allergySeverityTypeIDFieldSpecified;
        
        private string allergyCommentField;
        
        private string idField;
        
        /// <remarks/>
        public string allergyName {
            get {
                return this.allergyNameField;
            }
            set {
                this.allergyNameField = value;
            }
        }
        
        /// <remarks/>
        public AllergySeverityType allergySeverityTypeID {
            get {
                return this.allergySeverityTypeIDField;
            }
            set {
                this.allergySeverityTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allergySeverityTypeIDSpecified {
            get {
                return this.allergySeverityTypeIDFieldSpecified;
            }
            set {
                this.allergySeverityTypeIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string allergyComment {
            get {
                return this.allergyCommentField;
            }
            set {
                this.allergyCommentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum AllergySeverityType {
        
        /// <remarks/>
        Unspecified,
        
        /// <remarks/>
        Mild,
        
        /// <remarks/>
        Moderate,
        
        /// <remarks/>
        Severe,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientHealthplanFreeformType {
        
        private string healthplanNameField;
        
        /// <remarks/>
        public string healthplanName {
            get {
                return this.healthplanNameField;
            }
            set {
                this.healthplanNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientIdentifierType {
        
        private string patientIDField;
        
        private string patientIDTypeField;
        
        /// <remarks/>
        public string patientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string patientIDType {
            get {
                return this.patientIDTypeField;
            }
            set {
                this.patientIDTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientDiagnosisType {
        
        private string diagnosisIDField;
        
        private DiagnosisType diagnosisTypeField;
        
        private string onsetDateField;
        
        private string diagnosisNameField;
        
        private string recordedDateField;
        
        /// <remarks/>
        public string diagnosisID {
            get {
                return this.diagnosisIDField;
            }
            set {
                this.diagnosisIDField = value;
            }
        }
        
        /// <remarks/>
        public DiagnosisType diagnosisType {
            get {
                return this.diagnosisTypeField;
            }
            set {
                this.diagnosisTypeField = value;
            }
        }
        
        /// <remarks/>
        public string onsetDate {
            get {
                return this.onsetDateField;
            }
            set {
                this.onsetDateField = value;
            }
        }
        
        /// <remarks/>
        public string diagnosisName {
            get {
                return this.diagnosisNameField;
            }
            set {
                this.diagnosisNameField = value;
            }
        }
        
        /// <remarks/>
        public string recordedDate {
            get {
                return this.recordedDateField;
            }
            set {
                this.recordedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum DiagnosisType {
        
        /// <remarks/>
        ICD9,
        
        /// <remarks/>
        ICD9CM,
        
        /// <remarks/>
        ICD10,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientHealthplanType {
        
        private string healthplanIDField;
        
        private HealthplanType healthplanTypeIDField;
        
        private string groupField;
        
        /// <remarks/>
        public string healthplanID {
            get {
                return this.healthplanIDField;
            }
            set {
                this.healthplanIDField = value;
            }
        }
        
        /// <remarks/>
        public HealthplanType healthplanTypeID {
            get {
                return this.healthplanTypeIDField;
            }
            set {
                this.healthplanTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum HealthplanType {
        
        /// <remarks/>
        Summary,
        
        /// <remarks/>
        Detail,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientAllergyType {
        
        private string allergyIDField;
        
        private DrugDatabaseType allergyTypeIDField;
        
        private AllergySeverityType allergySeverityTypeIDField;
        
        private bool allergySeverityTypeIDFieldSpecified;
        
        private string allergyCommentField;
        
        private string conceptIDField;
        
        private string conceptTypeField;
        
        /// <remarks/>
        public string allergyID {
            get {
                return this.allergyIDField;
            }
            set {
                this.allergyIDField = value;
            }
        }
        
        /// <remarks/>
        public DrugDatabaseType allergyTypeID {
            get {
                return this.allergyTypeIDField;
            }
            set {
                this.allergyTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public AllergySeverityType allergySeverityTypeID {
            get {
                return this.allergySeverityTypeIDField;
            }
            set {
                this.allergySeverityTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allergySeverityTypeIDSpecified {
            get {
                return this.allergySeverityTypeIDFieldSpecified;
            }
            set {
                this.allergySeverityTypeIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string allergyComment {
            get {
                return this.allergyCommentField;
            }
            set {
                this.allergyCommentField = value;
            }
        }
        
        /// <remarks/>
        public string conceptID {
            get {
                return this.conceptIDField;
            }
            set {
                this.conceptIDField = value;
            }
        }
        
        /// <remarks/>
        public string conceptType {
            get {
                return this.conceptTypeField;
            }
            set {
                this.conceptTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientCharacteristicsType {
        
        private string dobField;
        
        private GenderType genderField;
        
        private bool genderFieldSpecified;
        
        private string heightField;
        
        private string heightUnitsField;
        
        private string weightField;
        
        private string weightUnitsField;
        
        private LanguageType languageField;
        
        private bool languageFieldSpecified;
        
        /// <remarks/>
        public string dob {
            get {
                return this.dobField;
            }
            set {
                this.dobField = value;
            }
        }
        
        /// <remarks/>
        public GenderType gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool genderSpecified {
            get {
                return this.genderFieldSpecified;
            }
            set {
                this.genderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        public string heightUnits {
            get {
                return this.heightUnitsField;
            }
            set {
                this.heightUnitsField = value;
            }
        }
        
        /// <remarks/>
        public string weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        public string weightUnits {
            get {
                return this.weightUnitsField;
            }
            set {
                this.weightUnitsField = value;
            }
        }
        
        /// <remarks/>
        public LanguageType language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool languageSpecified {
            get {
                return this.languageFieldSpecified;
            }
            set {
                this.languageFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum GenderType {
        
        /// <remarks/>
        M,
        
        /// <remarks/>
        F,
        
        /// <remarks/>
        U,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum LanguageType {
        
        /// <remarks/>
        Arabic,
        
        /// <remarks/>
        Chinese,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Chinese (Simplified)")]
        ChineseSimplified,
        
        /// <remarks/>
        Creole,
        
        /// <remarks/>
        English,
        
        /// <remarks/>
        French,
        
        /// <remarks/>
        German,
        
        /// <remarks/>
        Greek,
        
        /// <remarks/>
        Italian,
        
        /// <remarks/>
        Japanese,
        
        /// <remarks/>
        Korean,
        
        /// <remarks/>
        Polish,
        
        /// <remarks/>
        Portuguese,
        
        /// <remarks/>
        Russian,
        
        /// <remarks/>
        Spanish,
        
        /// <remarks/>
        Tagalog,
        
        /// <remarks/>
        Turkish,
        
        /// <remarks/>
        Vietnamese,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class ContactType {
        
        private string homeTelephoneField;
        
        private string workTelephoneField;
        
        private string cellularTelephoneField;
        
        private string pagerTelephoneField;
        
        private string faxField;
        
        private string emailField;
        
        private string backOfficeTelephoneField;
        
        private string backOfficeFaxField;
        
        /// <remarks/>
        public string homeTelephone {
            get {
                return this.homeTelephoneField;
            }
            set {
                this.homeTelephoneField = value;
            }
        }
        
        /// <remarks/>
        public string workTelephone {
            get {
                return this.workTelephoneField;
            }
            set {
                this.workTelephoneField = value;
            }
        }
        
        /// <remarks/>
        public string cellularTelephone {
            get {
                return this.cellularTelephoneField;
            }
            set {
                this.cellularTelephoneField = value;
            }
        }
        
        /// <remarks/>
        public string pagerTelephone {
            get {
                return this.pagerTelephoneField;
            }
            set {
                this.pagerTelephoneField = value;
            }
        }
        
        /// <remarks/>
        public string fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string backOfficeTelephone {
            get {
                return this.backOfficeTelephoneField;
            }
            set {
                this.backOfficeTelephoneField = value;
            }
        }
        
        /// <remarks/>
        public string backOfficeFax {
            get {
                return this.backOfficeFaxField;
            }
            set {
                this.backOfficeFaxField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class AddressOptionalType {
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string zip4Field;
        
        private string countryField;
        
        /// <remarks/>
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string zip4 {
            get {
                return this.zip4Field;
            }
            set {
                this.zip4Field = value;
            }
        }
        
        /// <remarks/>
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PatientType {
        
        private PersonNameType patientNameField;
        
        private string medicalRecordNumberField;
        
        private string socialSecurityNumberField;
        
        private string memoField;
        
        private AddressOptionalType patientAddressField;
        
        private ContactType patientContactField;
        
        private PatientCharacteristicsType patientCharacteristicsField;
        
        private PatientAllergyType[] patientAllergiesField;
        
        private PatientHealthplanType[] patientHealthplansField;
        
        private PatientDiagnosisType[] patientDiagnosisField;
        
        private string patientDiagnosisSearchField;
        
        private PatientIdentifierType[] patientIdentifierField;
        
        private PatientHealthplanFreeformType[] patientFreeformHealthplansField;
        
        private string episodeIdentifierField;
        
        private string encounterIdentifierField;
        
        private PatientAllergyFreeformType[] patientFreeformAllergyField;
        
        private PatientFormularyType patientFormularyField;
        
        private PatientPharmacyType[] patientPharmaciesField;
        
        private string drugSetIDField;
        
        private string idField;
        
        /// <remarks/>
        public PersonNameType PatientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public string medicalRecordNumber {
            get {
                return this.medicalRecordNumberField;
            }
            set {
                this.medicalRecordNumberField = value;
            }
        }
        
        /// <remarks/>
        public string socialSecurityNumber {
            get {
                return this.socialSecurityNumberField;
            }
            set {
                this.socialSecurityNumberField = value;
            }
        }
        
        /// <remarks/>
        public string memo {
            get {
                return this.memoField;
            }
            set {
                this.memoField = value;
            }
        }
        
        /// <remarks/>
        public AddressOptionalType PatientAddress {
            get {
                return this.patientAddressField;
            }
            set {
                this.patientAddressField = value;
            }
        }
        
        /// <remarks/>
        public ContactType PatientContact {
            get {
                return this.patientContactField;
            }
            set {
                this.patientContactField = value;
            }
        }
        
        /// <remarks/>
        public PatientCharacteristicsType PatientCharacteristics {
            get {
                return this.patientCharacteristicsField;
            }
            set {
                this.patientCharacteristicsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatientAllergies")]
        public PatientAllergyType[] PatientAllergies {
            get {
                return this.patientAllergiesField;
            }
            set {
                this.patientAllergiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatientHealthplans")]
        public PatientHealthplanType[] PatientHealthplans {
            get {
                return this.patientHealthplansField;
            }
            set {
                this.patientHealthplansField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatientDiagnosis")]
        public PatientDiagnosisType[] PatientDiagnosis {
            get {
                return this.patientDiagnosisField;
            }
            set {
                this.patientDiagnosisField = value;
            }
        }
        
        /// <remarks/>
        public string PatientDiagnosisSearch {
            get {
                return this.patientDiagnosisSearchField;
            }
            set {
                this.patientDiagnosisSearchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatientIdentifier")]
        public PatientIdentifierType[] PatientIdentifier {
            get {
                return this.patientIdentifierField;
            }
            set {
                this.patientIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatientFreeformHealthplans")]
        public PatientHealthplanFreeformType[] PatientFreeformHealthplans {
            get {
                return this.patientFreeformHealthplansField;
            }
            set {
                this.patientFreeformHealthplansField = value;
            }
        }
        
        /// <remarks/>
        public string EpisodeIdentifier {
            get {
                return this.episodeIdentifierField;
            }
            set {
                this.episodeIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string EncounterIdentifier {
            get {
                return this.encounterIdentifierField;
            }
            set {
                this.encounterIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatientFreeformAllergy")]
        public PatientAllergyFreeformType[] PatientFreeformAllergy {
            get {
                return this.patientFreeformAllergyField;
            }
            set {
                this.patientFreeformAllergyField = value;
            }
        }
        
        /// <remarks/>
        public PatientFormularyType PatientFormulary {
            get {
                return this.patientFormularyField;
            }
            set {
                this.patientFormularyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PatientPharmacies")]
        public PatientPharmacyType[] PatientPharmacies {
            get {
                return this.patientPharmaciesField;
            }
            set {
                this.patientPharmaciesField = value;
            }
        }
        
        /// <remarks/>
        public string DrugSetID {
            get {
                return this.drugSetIDField;
            }
            set {
                this.drugSetIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class PersonNameType {
        
        private string lastField;
        
        private string firstField;
        
        private string middleField;
        
        private PersonNamePrefix prefixField;
        
        private bool prefixFieldSpecified;
        
        private PersonNameSuffix suffixField;
        
        private bool suffixFieldSpecified;
        
        /// <remarks/>
        public string last {
            get {
                return this.lastField;
            }
            set {
                this.lastField = value;
            }
        }
        
        /// <remarks/>
        public string first {
            get {
                return this.firstField;
            }
            set {
                this.firstField = value;
            }
        }
        
        /// <remarks/>
        public string middle {
            get {
                return this.middleField;
            }
            set {
                this.middleField = value;
            }
        }
        
        /// <remarks/>
        public PersonNamePrefix prefix {
            get {
                return this.prefixField;
            }
            set {
                this.prefixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool prefixSpecified {
            get {
                return this.prefixFieldSpecified;
            }
            set {
                this.prefixFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public PersonNameSuffix suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool suffixSpecified {
            get {
                return this.suffixFieldSpecified;
            }
            set {
                this.suffixFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum PersonNamePrefix {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ms.")]
        Ms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ms")]
        Ms1,
        
        /// <remarks/>
        Miss,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mr.")]
        Mr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mr")]
        Mr1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mrs.")]
        Mrs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mrs")]
        Mrs1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dr.")]
        Dr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dr")]
        Dr1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Sr.")]
        Sr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Sr")]
        Sr1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Sra.")]
        Sra,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Sra")]
        Sra1,
        
        /// <remarks/>
        Fr,
        
        /// <remarks/>
        Rev,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum PersonNameSuffix {
        
        /// <remarks/>
        DDS,
        
        /// <remarks/>
        DO,
        
        /// <remarks/>
        Jr,
        
        /// <remarks/>
        LVN,
        
        /// <remarks/>
        MD,
        
        /// <remarks/>
        NP,
        
        /// <remarks/>
        PA,
        
        /// <remarks/>
        RN,
        
        /// <remarks/>
        Sr,
        
        /// <remarks/>
        I,
        
        /// <remarks/>
        II,
        
        /// <remarks/>
        III,
        
        /// <remarks/>
        PhD,
        
        /// <remarks/>
        PharmD,
        
        /// <remarks/>
        RPh,
        
        /// <remarks/>
        MA,
        
        /// <remarks/>
        OD,
        
        /// <remarks/>
        CNP,
        
        /// <remarks/>
        CNM,
        
        /// <remarks/>
        RPAC,
        
        /// <remarks/>
        FACC,
        
        /// <remarks/>
        FACP,
        
        /// <remarks/>
        LPN,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Jr.")]
        Jr1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Sr.")]
        Sr1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Esq.")]
        Esq,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Esq")]
        Esq1,
        
        /// <remarks/>
        IV,
        
        /// <remarks/>
        DPM,
        
        /// <remarks/>
        PAC,
        
        /// <remarks/>
        CNS,
        
        /// <remarks/>
        RD,
        
        /// <remarks/>
        CRNP,
        
        /// <remarks/>
        FNP,
        
        /// <remarks/>
        ANP,
        
        /// <remarks/>
        GNP,
        
        /// <remarks/>
        PNP,
        
        /// <remarks/>
        APRN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class StaffType {
        
        private PersonNameType staffNameField;
        
        private string licenseField;
        
        private string npiField;
        
        private string idField;
        
        /// <remarks/>
        public PersonNameType StaffName {
            get {
                return this.staffNameField;
            }
            set {
                this.staffNameField = value;
            }
        }
        
        /// <remarks/>
        public string license {
            get {
                return this.licenseField;
            }
            set {
                this.licenseField = value;
            }
        }
        
        /// <remarks/>
        public string npi {
            get {
                return this.npiField;
            }
            set {
                this.npiField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class LicensedPrescriberType {
        
        private PersonNameType licensedPrescriberNameField;
        
        private string deaField;
        
        private PrescriberStatus prescriberStatusField;
        
        private bool prescriberStatusFieldSpecified;
        
        private string upinField;
        
        private string licenseStateField;
        
        private string licenseNumberField;
        
        private PrescriberNetwork prescriberNetworkField;
        
        private bool prescriberNetworkFieldSpecified;
        
        private string prescriberStartDateTimeField;
        
        private string prescriberStopDateTimeField;
        
        private string npiField;
        
        private string freeformCredentialsField;
        
        private string idField;
        
        /// <remarks/>
        public PersonNameType LicensedPrescriberName {
            get {
                return this.licensedPrescriberNameField;
            }
            set {
                this.licensedPrescriberNameField = value;
            }
        }
        
        /// <remarks/>
        public string dea {
            get {
                return this.deaField;
            }
            set {
                this.deaField = value;
            }
        }
        
        /// <remarks/>
        public PrescriberStatus prescriberStatus {
            get {
                return this.prescriberStatusField;
            }
            set {
                this.prescriberStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool prescriberStatusSpecified {
            get {
                return this.prescriberStatusFieldSpecified;
            }
            set {
                this.prescriberStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string upin {
            get {
                return this.upinField;
            }
            set {
                this.upinField = value;
            }
        }
        
        /// <remarks/>
        public string licenseState {
            get {
                return this.licenseStateField;
            }
            set {
                this.licenseStateField = value;
            }
        }
        
        /// <remarks/>
        public string licenseNumber {
            get {
                return this.licenseNumberField;
            }
            set {
                this.licenseNumberField = value;
            }
        }
        
        /// <remarks/>
        public PrescriberNetwork prescriberNetwork {
            get {
                return this.prescriberNetworkField;
            }
            set {
                this.prescriberNetworkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool prescriberNetworkSpecified {
            get {
                return this.prescriberNetworkFieldSpecified;
            }
            set {
                this.prescriberNetworkFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string prescriberStartDateTime {
            get {
                return this.prescriberStartDateTimeField;
            }
            set {
                this.prescriberStartDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string prescriberStopDateTime {
            get {
                return this.prescriberStopDateTimeField;
            }
            set {
                this.prescriberStopDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string npi {
            get {
                return this.npiField;
            }
            set {
                this.npiField = value;
            }
        }
        
        /// <remarks/>
        public string freeformCredentials {
            get {
                return this.freeformCredentialsField;
            }
            set {
                this.freeformCredentialsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum PrescriberStatus {
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Inactive,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7:NCStandard")]
    public enum PrescriberNetwork {
        
        /// <remarks/>
        SureScripts,
        
        /// <remarks/>
        RxHub,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class LocationType {
        
        private string locationNameField;
        
        private string locationShortNameField;
        
        private AddressType locationAddressField;
        
        private string primaryPhoneNumberField;
        
        private string primaryFaxNumberField;
        
        private string pharmacyContactNumberField;
        
        private string idField;
        
        /// <remarks/>
        public string locationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        public string locationShortName {
            get {
                return this.locationShortNameField;
            }
            set {
                this.locationShortNameField = value;
            }
        }
        
        /// <remarks/>
        public AddressType LocationAddress {
            get {
                return this.locationAddressField;
            }
            set {
                this.locationAddressField = value;
            }
        }
        
        /// <remarks/>
        public string primaryPhoneNumber {
            get {
                return this.primaryPhoneNumberField;
            }
            set {
                this.primaryPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string primaryFaxNumber {
            get {
                return this.primaryFaxNumberField;
            }
            set {
                this.primaryFaxNumberField = value;
            }
        }
        
        /// <remarks/>
        public string pharmacyContactNumber {
            get {
                return this.pharmacyContactNumberField;
            }
            set {
                this.pharmacyContactNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class AddressType {
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string zip4Field;
        
        private string countryField;
        
        /// <remarks/>
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string zip4 {
            get {
                return this.zip4Field;
            }
            set {
                this.zip4Field = value;
            }
        }
        
        /// <remarks/>
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class AccountType {
        
        private string accountNameField;
        
        private string siteIDField;
        
        private AddressType accountAddressField;
        
        private string accountPrimaryPhoneNumberField;
        
        private string accountPrimaryFaxNumberField;
        
        private string idField;
        
        /// <remarks/>
        public string accountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public string siteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        public AddressType AccountAddress {
            get {
                return this.accountAddressField;
            }
            set {
                this.accountAddressField = value;
            }
        }
        
        /// <remarks/>
        public string accountPrimaryPhoneNumber {
            get {
                return this.accountPrimaryPhoneNumberField;
            }
            set {
                this.accountPrimaryPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string accountPrimaryFaxNumber {
            get {
                return this.accountPrimaryFaxNumberField;
            }
            set {
                this.accountPrimaryFaxNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class CredentialsType {
        
        private string partnerNameField;
        
        private string nameField;
        
        private string passwordField;
        
        private string productNameField;
        
        private string productVersionField;
        
        /// <remarks/>
        public string partnerName {
            get {
                return this.partnerNameField;
            }
            set {
                this.partnerNameField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string productName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public string productVersion {
            get {
                return this.productVersionField;
            }
            set {
                this.productVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://secure.newcropaccounts.com/interfaceV7")]
    public partial class NCRenewal {
        
        private CredentialsType credentialsField;
        
        private AccountType accountField;
        
        private LocationType locationField;
        
        private LicensedPrescriberType licensedPrescriberField;
        
        private StaffType staffField;
        
        private PatientType patientField;
        
        private PrescriptionRenewalRequestType prescriptionRenewalRequestField;
        
        /// <remarks/>
        public CredentialsType Credentials {
            get {
                return this.credentialsField;
            }
            set {
                this.credentialsField = value;
            }
        }
        
        /// <remarks/>
        public AccountType Account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
        
        /// <remarks/>
        public LocationType Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public LicensedPrescriberType LicensedPrescriber {
            get {
                return this.licensedPrescriberField;
            }
            set {
                this.licensedPrescriberField = value;
            }
        }
        
        /// <remarks/>
        public StaffType Staff {
            get {
                return this.staffField;
            }
            set {
                this.staffField = value;
            }
        }
        
        /// <remarks/>
        public PatientType Patient {
            get {
                return this.patientField;
            }
            set {
                this.patientField = value;
            }
        }
        
        /// <remarks/>
        public PrescriptionRenewalRequestType PrescriptionRenewalRequest {
            get {
                return this.prescriptionRenewalRequestField;
            }
            set {
                this.prescriptionRenewalRequestField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalDetail {
        
        private string externalLocationIdField;
        
        private string externalDoctorIdField;
        
        private NCRenewal renewalField;
        
        /// <remarks/>
        public string ExternalLocationId {
            get {
                return this.externalLocationIdField;
            }
            set {
                this.externalLocationIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalDoctorId {
            get {
                return this.externalDoctorIdField;
            }
            set {
                this.externalDoctorIdField = value;
            }
        }
        
        /// <remarks/>
        public NCRenewal renewal {
            get {
                return this.renewalField;
            }
            set {
                this.renewalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalDetailResult {
        
        private Result resultField;
        
        private RenewalDetail renewalDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RenewalDetail renewalDetail {
            get {
                return this.renewalDetailField;
            }
            set {
                this.renewalDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalSummaryV4 {
        
        private string renewalRequestGuidField;
        
        private string receivedTimestampField;
        
        /// <remarks/>
        public string RenewalRequestGuid {
            get {
                return this.renewalRequestGuidField;
            }
            set {
                this.renewalRequestGuidField = value;
            }
        }
        
        /// <remarks/>
        public string ReceivedTimestamp {
            get {
                return this.receivedTimestampField;
            }
            set {
                this.receivedTimestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalListSummaryResultV4 {
        
        private Result resultField;
        
        private RenewalSummaryV4[] renewalListDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RenewalSummaryV4[] renewalListDetailArray {
            get {
                return this.renewalListDetailArrayField;
            }
            set {
                this.renewalListDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalListDetailResultV4 {
        
        private Result resultField;
        
        private RenewalDetailV4[] renewalListDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RenewalDetailV4[] renewalListDetailArray {
            get {
                return this.renewalListDetailArrayField;
            }
            set {
                this.renewalListDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalSummaryV2 {
        
        private string renewalRequestGuidField;
        
        private string receivedTimestampField;
        
        private string locationNameField;
        
        private string doctorFullNameField;
        
        private string pharmacyInfoField;
        
        private string pharmacyFullInfoField;
        
        private string pharmacyStoreNameField;
        
        private string patientFirstNameField;
        
        private string patientMiddleNameField;
        
        private string patientLastNameField;
        
        private string patientDOBField;
        
        private string patientGenderField;
        
        private string drugInfoField;
        
        private string numberOfRefillsField;
        
        private string externalLocationIdField;
        
        private string externalDoctorIdField;
        
        private string externalPatientIdField;
        
        private string externalPrescriptionIdField;
        
        private string quantityField;
        
        private string sigField;
        
        private string ncpdpIdField;
        
        private string spare1Field;
        
        private string spare2Field;
        
        private string spare3Field;
        
        private string spare4Field;
        
        private string spare5Field;
        
        /// <remarks/>
        public string RenewalRequestGuid {
            get {
                return this.renewalRequestGuidField;
            }
            set {
                this.renewalRequestGuidField = value;
            }
        }
        
        /// <remarks/>
        public string ReceivedTimestamp {
            get {
                return this.receivedTimestampField;
            }
            set {
                this.receivedTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string LocationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorFullName {
            get {
                return this.doctorFullNameField;
            }
            set {
                this.doctorFullNameField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyInfo {
            get {
                return this.pharmacyInfoField;
            }
            set {
                this.pharmacyInfoField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyFullInfo {
            get {
                return this.pharmacyFullInfoField;
            }
            set {
                this.pharmacyFullInfoField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyStoreName {
            get {
                return this.pharmacyStoreNameField;
            }
            set {
                this.pharmacyStoreNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientFirstName {
            get {
                return this.patientFirstNameField;
            }
            set {
                this.patientFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientMiddleName {
            get {
                return this.patientMiddleNameField;
            }
            set {
                this.patientMiddleNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientLastName {
            get {
                return this.patientLastNameField;
            }
            set {
                this.patientLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientDOB {
            get {
                return this.patientDOBField;
            }
            set {
                this.patientDOBField = value;
            }
        }
        
        /// <remarks/>
        public string PatientGender {
            get {
                return this.patientGenderField;
            }
            set {
                this.patientGenderField = value;
            }
        }
        
        /// <remarks/>
        public string DrugInfo {
            get {
                return this.drugInfoField;
            }
            set {
                this.drugInfoField = value;
            }
        }
        
        /// <remarks/>
        public string NumberOfRefills {
            get {
                return this.numberOfRefillsField;
            }
            set {
                this.numberOfRefillsField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalLocationId {
            get {
                return this.externalLocationIdField;
            }
            set {
                this.externalLocationIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalDoctorId {
            get {
                return this.externalDoctorIdField;
            }
            set {
                this.externalDoctorIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPatientId {
            get {
                return this.externalPatientIdField;
            }
            set {
                this.externalPatientIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPrescriptionId {
            get {
                return this.externalPrescriptionIdField;
            }
            set {
                this.externalPrescriptionIdField = value;
            }
        }
        
        /// <remarks/>
        public string Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public string Sig {
            get {
                return this.sigField;
            }
            set {
                this.sigField = value;
            }
        }
        
        /// <remarks/>
        public string NcpdpId {
            get {
                return this.ncpdpIdField;
            }
            set {
                this.ncpdpIdField = value;
            }
        }
        
        /// <remarks/>
        public string Spare1 {
            get {
                return this.spare1Field;
            }
            set {
                this.spare1Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare2 {
            get {
                return this.spare2Field;
            }
            set {
                this.spare2Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare3 {
            get {
                return this.spare3Field;
            }
            set {
                this.spare3Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare4 {
            get {
                return this.spare4Field;
            }
            set {
                this.spare4Field = value;
            }
        }
        
        /// <remarks/>
        public string Spare5 {
            get {
                return this.spare5Field;
            }
            set {
                this.spare5Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalSummaryResultV2 {
        
        private Result resultField;
        
        private RenewalSummaryV2[] renewalSummaryArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RenewalSummaryV2[] renewalSummaryArray {
            get {
                return this.renewalSummaryArrayField;
            }
            set {
                this.renewalSummaryArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalSummary {
        
        private string renewalRequestGuidField;
        
        private string receivedTimestampField;
        
        private string locationNameField;
        
        private string doctorFullNameField;
        
        private string pharmacyInfoField;
        
        private string pharmacyFullInfoField;
        
        private string pharmacyStoreNameField;
        
        private string patientFirstNameField;
        
        private string patientMiddleNameField;
        
        private string patientLastNameField;
        
        private string patientDOBField;
        
        private string patientGenderField;
        
        private string drugInfoField;
        
        private string numberOfRefillsField;
        
        private string externalLocationIdField;
        
        private string externalDoctorIdField;
        
        private string externalPatientIdField;
        
        private string externalPrescriptionIdField;
        
        /// <remarks/>
        public string RenewalRequestGuid {
            get {
                return this.renewalRequestGuidField;
            }
            set {
                this.renewalRequestGuidField = value;
            }
        }
        
        /// <remarks/>
        public string ReceivedTimestamp {
            get {
                return this.receivedTimestampField;
            }
            set {
                this.receivedTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string LocationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorFullName {
            get {
                return this.doctorFullNameField;
            }
            set {
                this.doctorFullNameField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyInfo {
            get {
                return this.pharmacyInfoField;
            }
            set {
                this.pharmacyInfoField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyFullInfo {
            get {
                return this.pharmacyFullInfoField;
            }
            set {
                this.pharmacyFullInfoField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyStoreName {
            get {
                return this.pharmacyStoreNameField;
            }
            set {
                this.pharmacyStoreNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientFirstName {
            get {
                return this.patientFirstNameField;
            }
            set {
                this.patientFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientMiddleName {
            get {
                return this.patientMiddleNameField;
            }
            set {
                this.patientMiddleNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientLastName {
            get {
                return this.patientLastNameField;
            }
            set {
                this.patientLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientDOB {
            get {
                return this.patientDOBField;
            }
            set {
                this.patientDOBField = value;
            }
        }
        
        /// <remarks/>
        public string PatientGender {
            get {
                return this.patientGenderField;
            }
            set {
                this.patientGenderField = value;
            }
        }
        
        /// <remarks/>
        public string DrugInfo {
            get {
                return this.drugInfoField;
            }
            set {
                this.drugInfoField = value;
            }
        }
        
        /// <remarks/>
        public string NumberOfRefills {
            get {
                return this.numberOfRefillsField;
            }
            set {
                this.numberOfRefillsField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalLocationId {
            get {
                return this.externalLocationIdField;
            }
            set {
                this.externalLocationIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalDoctorId {
            get {
                return this.externalDoctorIdField;
            }
            set {
                this.externalDoctorIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPatientId {
            get {
                return this.externalPatientIdField;
            }
            set {
                this.externalPatientIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPrescriptionId {
            get {
                return this.externalPrescriptionIdField;
            }
            set {
                this.externalPrescriptionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class RenewalSummaryResult {
        
        private Result resultField;
        
        private RenewalSummary[] renewalSummaryArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public RenewalSummary[] renewalSummaryArray {
            get {
                return this.renewalSummaryArrayField;
            }
            set {
                this.renewalSummaryArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PharmacyDetail {
        
        private string ncpdpIDField;
        
        private string nameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string phoneField;
        
        private string faxField;
        
        private string pharmacyTypeField;
        
        private string statusField;
        
        private string touchDateField;
        
        /// <remarks/>
        public string ncpdpID {
            get {
                return this.ncpdpIDField;
            }
            set {
                this.ncpdpIDField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string pharmacyType {
            get {
                return this.pharmacyTypeField;
            }
            set {
                this.pharmacyTypeField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string touchDate {
            get {
                return this.touchDateField;
            }
            set {
                this.touchDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class TransmissionDetail {
        
        private TransmissionMethodType transmissionMethodField;
        
        private string transmissionNetworkField;
        
        private System.Guid transactionGuidField;
        
        private System.Guid transactionDetailGuidField;
        
        private System.DateTime timestampField;
        
        private string userIdField;
        
        private string statusMessageField;
        
        private string detailMessageField;
        
        private string detailXmlResponseField;
        
        private PharmacyDetail pharmacyDetailField;
        
        /// <remarks/>
        public TransmissionMethodType TransmissionMethod {
            get {
                return this.transmissionMethodField;
            }
            set {
                this.transmissionMethodField = value;
            }
        }
        
        /// <remarks/>
        public string TransmissionNetwork {
            get {
                return this.transmissionNetworkField;
            }
            set {
                this.transmissionNetworkField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid TransactionGuid {
            get {
                return this.transactionGuidField;
            }
            set {
                this.transactionGuidField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid TransactionDetailGuid {
            get {
                return this.transactionDetailGuidField;
            }
            set {
                this.transactionDetailGuidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string StatusMessage {
            get {
                return this.statusMessageField;
            }
            set {
                this.statusMessageField = value;
            }
        }
        
        /// <remarks/>
        public string DetailMessage {
            get {
                return this.detailMessageField;
            }
            set {
                this.detailMessageField = value;
            }
        }
        
        /// <remarks/>
        public string DetailXmlResponse {
            get {
                return this.detailXmlResponseField;
            }
            set {
                this.detailXmlResponseField = value;
            }
        }
        
        /// <remarks/>
        public PharmacyDetail pharmacyDetail {
            get {
                return this.pharmacyDetailField;
            }
            set {
                this.pharmacyDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum TransmissionMethodType {
        
        /// <remarks/>
        Print,
        
        /// <remarks/>
        Fax,
        
        /// <remarks/>
        Electronic,
        
        /// <remarks/>
        HandWritten,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Indeterminate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class TransmissionSummary {
        
        private string externalIdField;
        
        private System.Guid prescriptionGuidField;
        
        private string prescriptionStatusField;
        
        private string prescriptionSubStatusField;
        
        private string prescriptionArchiveField;
        
        private string summaryMessageField;
        
        private string summaryXmlResponseField;
        
        private int transmissionDetailCountField;
        
        private PatientDrugDetail5 drugDetailField;
        
        private TransmissionDetail[] transmissionDetailArrayField;
        
        /// <remarks/>
        public string ExternalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid PrescriptionGuid {
            get {
                return this.prescriptionGuidField;
            }
            set {
                this.prescriptionGuidField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionStatus {
            get {
                return this.prescriptionStatusField;
            }
            set {
                this.prescriptionStatusField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionSubStatus {
            get {
                return this.prescriptionSubStatusField;
            }
            set {
                this.prescriptionSubStatusField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionArchive {
            get {
                return this.prescriptionArchiveField;
            }
            set {
                this.prescriptionArchiveField = value;
            }
        }
        
        /// <remarks/>
        public string SummaryMessage {
            get {
                return this.summaryMessageField;
            }
            set {
                this.summaryMessageField = value;
            }
        }
        
        /// <remarks/>
        public string SummaryXmlResponse {
            get {
                return this.summaryXmlResponseField;
            }
            set {
                this.summaryXmlResponseField = value;
            }
        }
        
        /// <remarks/>
        public int TransmissionDetailCount {
            get {
                return this.transmissionDetailCountField;
            }
            set {
                this.transmissionDetailCountField = value;
            }
        }
        
        /// <remarks/>
        public PatientDrugDetail5 drugDetail {
            get {
                return this.drugDetailField;
            }
            set {
                this.drugDetailField = value;
            }
        }
        
        /// <remarks/>
        public TransmissionDetail[] transmissionDetailArray {
            get {
                return this.transmissionDetailArrayField;
            }
            set {
                this.transmissionDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientDrugDetail5 {
        
        private string accountNameField;
        
        private string externalAccountIDField;
        
        private string siteIDField;
        
        private string fullNameField;
        
        private string externalPatientIDField;
        
        private string prescriptionDateField;
        
        private string drugIDField;
        
        private string drugTypeIDField;
        
        private string drugNameField;
        
        private string strengthField;
        
        private string strengthUOMField;
        
        private string dosageNumberDescriptionField;
        
        private string dosageFormField;
        
        private string routeField;
        
        private string dosageFrequencyDescriptionField;
        
        private string dispenseField;
        
        private string takeAsNeededField;
        
        private string dispenseAsWrittenField;
        
        private string refillsField;
        
        private string statusField;
        
        private string subStatusField;
        
        private string archiveStatusField;
        
        private string prescriptionGuidField;
        
        private string orderGuidField;
        
        private string prescriptionNotesField;
        
        private string externalPhysicianIDField;
        
        private string physicianNameField;
        
        private string dateMovedToPreviousMedicationsField;
        
        private string healthPlanIDField;
        
        private string healthplanTypeIDField;
        
        private string formularyCoverageField;
        
        private string formularyStatusField;
        
        private string patientIDField;
        
        private string patientIDTypeField;
        
        private string externalPrescriptionIDField;
        
        private string episodeIdentifierField;
        
        private string encounterIdentifierField;
        
        private string externalSourceField;
        
        private ExternalDrugOverride externalDrugOverrideField;
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalAccountID {
            get {
                return this.externalAccountIDField;
            }
            set {
                this.externalAccountIDField = value;
            }
        }
        
        /// <remarks/>
        public string SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPatientID {
            get {
                return this.externalPatientIDField;
            }
            set {
                this.externalPatientIDField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionDate {
            get {
                return this.prescriptionDateField;
            }
            set {
                this.prescriptionDateField = value;
            }
        }
        
        /// <remarks/>
        public string DrugID {
            get {
                return this.drugIDField;
            }
            set {
                this.drugIDField = value;
            }
        }
        
        /// <remarks/>
        public string DrugTypeID {
            get {
                return this.drugTypeIDField;
            }
            set {
                this.drugTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string DrugName {
            get {
                return this.drugNameField;
            }
            set {
                this.drugNameField = value;
            }
        }
        
        /// <remarks/>
        public string Strength {
            get {
                return this.strengthField;
            }
            set {
                this.strengthField = value;
            }
        }
        
        /// <remarks/>
        public string StrengthUOM {
            get {
                return this.strengthUOMField;
            }
            set {
                this.strengthUOMField = value;
            }
        }
        
        /// <remarks/>
        public string DosageNumberDescription {
            get {
                return this.dosageNumberDescriptionField;
            }
            set {
                this.dosageNumberDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DosageForm {
            get {
                return this.dosageFormField;
            }
            set {
                this.dosageFormField = value;
            }
        }
        
        /// <remarks/>
        public string Route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string DosageFrequencyDescription {
            get {
                return this.dosageFrequencyDescriptionField;
            }
            set {
                this.dosageFrequencyDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Dispense {
            get {
                return this.dispenseField;
            }
            set {
                this.dispenseField = value;
            }
        }
        
        /// <remarks/>
        public string TakeAsNeeded {
            get {
                return this.takeAsNeededField;
            }
            set {
                this.takeAsNeededField = value;
            }
        }
        
        /// <remarks/>
        public string DispenseAsWritten {
            get {
                return this.dispenseAsWrittenField;
            }
            set {
                this.dispenseAsWrittenField = value;
            }
        }
        
        /// <remarks/>
        public string Refills {
            get {
                return this.refillsField;
            }
            set {
                this.refillsField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string SubStatus {
            get {
                return this.subStatusField;
            }
            set {
                this.subStatusField = value;
            }
        }
        
        /// <remarks/>
        public string ArchiveStatus {
            get {
                return this.archiveStatusField;
            }
            set {
                this.archiveStatusField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionGuid {
            get {
                return this.prescriptionGuidField;
            }
            set {
                this.prescriptionGuidField = value;
            }
        }
        
        /// <remarks/>
        public string OrderGuid {
            get {
                return this.orderGuidField;
            }
            set {
                this.orderGuidField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionNotes {
            get {
                return this.prescriptionNotesField;
            }
            set {
                this.prescriptionNotesField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPhysicianID {
            get {
                return this.externalPhysicianIDField;
            }
            set {
                this.externalPhysicianIDField = value;
            }
        }
        
        /// <remarks/>
        public string PhysicianName {
            get {
                return this.physicianNameField;
            }
            set {
                this.physicianNameField = value;
            }
        }
        
        /// <remarks/>
        public string DateMovedToPreviousMedications {
            get {
                return this.dateMovedToPreviousMedicationsField;
            }
            set {
                this.dateMovedToPreviousMedicationsField = value;
            }
        }
        
        /// <remarks/>
        public string HealthPlanID {
            get {
                return this.healthPlanIDField;
            }
            set {
                this.healthPlanIDField = value;
            }
        }
        
        /// <remarks/>
        public string HealthplanTypeID {
            get {
                return this.healthplanTypeIDField;
            }
            set {
                this.healthplanTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string FormularyCoverage {
            get {
                return this.formularyCoverageField;
            }
            set {
                this.formularyCoverageField = value;
            }
        }
        
        /// <remarks/>
        public string FormularyStatus {
            get {
                return this.formularyStatusField;
            }
            set {
                this.formularyStatusField = value;
            }
        }
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string PatientIDType {
            get {
                return this.patientIDTypeField;
            }
            set {
                this.patientIDTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPrescriptionID {
            get {
                return this.externalPrescriptionIDField;
            }
            set {
                this.externalPrescriptionIDField = value;
            }
        }
        
        /// <remarks/>
        public string EpisodeIdentifier {
            get {
                return this.episodeIdentifierField;
            }
            set {
                this.episodeIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string EncounterIdentifier {
            get {
                return this.encounterIdentifierField;
            }
            set {
                this.encounterIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalSource {
            get {
                return this.externalSourceField;
            }
            set {
                this.externalSourceField = value;
            }
        }
        
        /// <remarks/>
        public ExternalDrugOverride ExternalDrugOverride {
            get {
                return this.externalDrugOverrideField;
            }
            set {
                this.externalDrugOverrideField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class ExternalDrugOverride {
        
        private string externalDrugConceptField;
        
        private string externalDrugNameField;
        
        private string externalDrugStrengthField;
        
        private string externalDrugStrengthUOMField;
        
        private string externalDrugStrengthWithUOMField;
        
        private string externalDrugDosageFormField;
        
        private string externalDrugRouteField;
        
        private string externalDrugIdentifierField;
        
        private string externalDrugIdentifierTypeField;
        
        private string externalDrugScheduleField;
        
        private string externalDrugOverTheCounterField;
        
        /// <remarks/>
        public string externalDrugConcept {
            get {
                return this.externalDrugConceptField;
            }
            set {
                this.externalDrugConceptField = value;
            }
        }
        
        /// <remarks/>
        public string externalDrugName {
            get {
                return this.externalDrugNameField;
            }
            set {
                this.externalDrugNameField = value;
            }
        }
        
        /// <remarks/>
        public string externalDrugStrength {
            get {
                return this.externalDrugStrengthField;
            }
            set {
                this.externalDrugStrengthField = value;
            }
        }
        
        /// <remarks/>
        public string externalDrugStrengthUOM {
            get {
                return this.externalDrugStrengthUOMField;
            }
            set {
                this.externalDrugStrengthUOMField = value;
            }
        }
        
        /// <remarks/>
        public string externalDrugStrengthWithUOM {
            get {
                return this.externalDrugStrengthWithUOMField;
            }
            set {
                this.externalDrugStrengthWithUOMField = value;
            }
        }
        
        /// <remarks/>
        public string externalDrugDosageForm {
            get {
                return this.externalDrugDosageFormField;
            }
            set {
                this.externalDrugDosageFormField = value;
            }
        }
        
        /// <remarks/>
        public string externalDrugRoute {
            get {
                return this.externalDrugRouteField;
            }
            set {
                this.externalDrugRouteField = value;
            }
        }
        
        /// <remarks/>
        public string externalDrugIdentifier {
            get {
                return this.externalDrugIdentifierField;
            }
            set {
                this.externalDrugIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string externalDrugIdentifierType {
            get {
                return this.externalDrugIdentifierTypeField;
            }
            set {
                this.externalDrugIdentifierTypeField = value;
            }
        }
        
        /// <remarks/>
        public string externalDrugSchedule {
            get {
                return this.externalDrugScheduleField;
            }
            set {
                this.externalDrugScheduleField = value;
            }
        }
        
        /// <remarks/>
        public string externalDrugOverTheCounter {
            get {
                return this.externalDrugOverTheCounterField;
            }
            set {
                this.externalDrugOverTheCounterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class TransmissionSummaryResult {
        
        private Result resultField;
        
        private TransmissionSummary[] transmissionSummaryDetailArrayField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public TransmissionSummary[] transmissionSummaryDetailArray {
            get {
                return this.transmissionSummaryDetailArrayField;
            }
            set {
                this.transmissionSummaryDetailArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientFreeFormAllergyExtendedDetail {
        
        private string externalIdField;
        
        private string nameField;
        
        private string severityTypeIDField;
        
        private string severityNameField;
        
        private string notesField;
        
        /// <remarks/>
        public string ExternalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string SeverityTypeID {
            get {
                return this.severityTypeIDField;
            }
            set {
                this.severityTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string SeverityName {
            get {
                return this.severityNameField;
            }
            set {
                this.severityNameField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientFreeFormAllergyExtendedDetailResult {
        
        private Result resultField;
        
        private PatientFreeFormAllergyExtendedDetail[] patientFreeFormAllergyExtendedDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public PatientFreeFormAllergyExtendedDetail[] patientFreeFormAllergyExtendedDetail {
            get {
                return this.patientFreeFormAllergyExtendedDetailField;
            }
            set {
                this.patientFreeFormAllergyExtendedDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientAllergyExtendedDetail {
        
        private string nameField;
        
        private string compositeIDField;
        
        private string conceptIDField;
        
        private string sourceField;
        
        private string conceptTypeIDField;
        
        private string statusField;
        
        private string severityTypeIDField;
        
        private string severityNameField;
        
        private string notesField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string CompositeID {
            get {
                return this.compositeIDField;
            }
            set {
                this.compositeIDField = value;
            }
        }
        
        /// <remarks/>
        public string ConceptID {
            get {
                return this.conceptIDField;
            }
            set {
                this.conceptIDField = value;
            }
        }
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string ConceptTypeID {
            get {
                return this.conceptTypeIDField;
            }
            set {
                this.conceptTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string SeverityTypeID {
            get {
                return this.severityTypeIDField;
            }
            set {
                this.severityTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string SeverityName {
            get {
                return this.severityNameField;
            }
            set {
                this.severityNameField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientAllergyExtendedDetailResult {
        
        private Result resultField;
        
        private PatientAllergyExtendedDetail[] patientAllergyExtendedDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public PatientAllergyExtendedDetail[] patientAllergyExtendedDetail {
            get {
                return this.patientAllergyExtendedDetailField;
            }
            set {
                this.patientAllergyExtendedDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientDrugDetailResult5 {
        
        private Result resultField;
        
        private PatientDrugDetail5[] patientDrugDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public PatientDrugDetail5[] patientDrugDetail {
            get {
                return this.patientDrugDetailField;
            }
            set {
                this.patientDrugDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientDrugDetail4 {
        
        private string accountNameField;
        
        private string externalAccountIDField;
        
        private string siteIDField;
        
        private string fullNameField;
        
        private string externalPatientIDField;
        
        private string prescriptionDateField;
        
        private string drugIDField;
        
        private string drugTypeIDField;
        
        private string drugNameField;
        
        private string strengthField;
        
        private string strengthUOMField;
        
        private string dosageNumberDescriptionField;
        
        private string dosageFormField;
        
        private string routeField;
        
        private string dosageFrequencyDescriptionField;
        
        private string dispenseField;
        
        private string takeAsNeededField;
        
        private string dispenseAsWrittenField;
        
        private string refillsField;
        
        private string statusField;
        
        private string prescriptionGuidField;
        
        private string orderGuidField;
        
        private string prescriptionNotesField;
        
        private string externalPhysicianIDField;
        
        private string physicianNameField;
        
        private string dateMovedToPreviousMedicationsField;
        
        private string healthPlanIDField;
        
        private string healthplanTypeIDField;
        
        private string formularyCoverageField;
        
        private string formularyStatusField;
        
        private string patientIDField;
        
        private string patientIDTypeField;
        
        private string externalPrescriptionIDField;
        
        private string episodeIdentifierField;
        
        private string encounterIdentifierField;
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalAccountID {
            get {
                return this.externalAccountIDField;
            }
            set {
                this.externalAccountIDField = value;
            }
        }
        
        /// <remarks/>
        public string SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPatientID {
            get {
                return this.externalPatientIDField;
            }
            set {
                this.externalPatientIDField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionDate {
            get {
                return this.prescriptionDateField;
            }
            set {
                this.prescriptionDateField = value;
            }
        }
        
        /// <remarks/>
        public string DrugID {
            get {
                return this.drugIDField;
            }
            set {
                this.drugIDField = value;
            }
        }
        
        /// <remarks/>
        public string DrugTypeID {
            get {
                return this.drugTypeIDField;
            }
            set {
                this.drugTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string DrugName {
            get {
                return this.drugNameField;
            }
            set {
                this.drugNameField = value;
            }
        }
        
        /// <remarks/>
        public string Strength {
            get {
                return this.strengthField;
            }
            set {
                this.strengthField = value;
            }
        }
        
        /// <remarks/>
        public string StrengthUOM {
            get {
                return this.strengthUOMField;
            }
            set {
                this.strengthUOMField = value;
            }
        }
        
        /// <remarks/>
        public string DosageNumberDescription {
            get {
                return this.dosageNumberDescriptionField;
            }
            set {
                this.dosageNumberDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DosageForm {
            get {
                return this.dosageFormField;
            }
            set {
                this.dosageFormField = value;
            }
        }
        
        /// <remarks/>
        public string Route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string DosageFrequencyDescription {
            get {
                return this.dosageFrequencyDescriptionField;
            }
            set {
                this.dosageFrequencyDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Dispense {
            get {
                return this.dispenseField;
            }
            set {
                this.dispenseField = value;
            }
        }
        
        /// <remarks/>
        public string TakeAsNeeded {
            get {
                return this.takeAsNeededField;
            }
            set {
                this.takeAsNeededField = value;
            }
        }
        
        /// <remarks/>
        public string DispenseAsWritten {
            get {
                return this.dispenseAsWrittenField;
            }
            set {
                this.dispenseAsWrittenField = value;
            }
        }
        
        /// <remarks/>
        public string Refills {
            get {
                return this.refillsField;
            }
            set {
                this.refillsField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionGuid {
            get {
                return this.prescriptionGuidField;
            }
            set {
                this.prescriptionGuidField = value;
            }
        }
        
        /// <remarks/>
        public string OrderGuid {
            get {
                return this.orderGuidField;
            }
            set {
                this.orderGuidField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionNotes {
            get {
                return this.prescriptionNotesField;
            }
            set {
                this.prescriptionNotesField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPhysicianID {
            get {
                return this.externalPhysicianIDField;
            }
            set {
                this.externalPhysicianIDField = value;
            }
        }
        
        /// <remarks/>
        public string PhysicianName {
            get {
                return this.physicianNameField;
            }
            set {
                this.physicianNameField = value;
            }
        }
        
        /// <remarks/>
        public string DateMovedToPreviousMedications {
            get {
                return this.dateMovedToPreviousMedicationsField;
            }
            set {
                this.dateMovedToPreviousMedicationsField = value;
            }
        }
        
        /// <remarks/>
        public string HealthPlanID {
            get {
                return this.healthPlanIDField;
            }
            set {
                this.healthPlanIDField = value;
            }
        }
        
        /// <remarks/>
        public string HealthplanTypeID {
            get {
                return this.healthplanTypeIDField;
            }
            set {
                this.healthplanTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string FormularyCoverage {
            get {
                return this.formularyCoverageField;
            }
            set {
                this.formularyCoverageField = value;
            }
        }
        
        /// <remarks/>
        public string FormularyStatus {
            get {
                return this.formularyStatusField;
            }
            set {
                this.formularyStatusField = value;
            }
        }
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string PatientIDType {
            get {
                return this.patientIDTypeField;
            }
            set {
                this.patientIDTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalPrescriptionID {
            get {
                return this.externalPrescriptionIDField;
            }
            set {
                this.externalPrescriptionIDField = value;
            }
        }
        
        /// <remarks/>
        public string EpisodeIdentifier {
            get {
                return this.episodeIdentifierField;
            }
            set {
                this.episodeIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string EncounterIdentifier {
            get {
                return this.encounterIdentifierField;
            }
            set {
                this.encounterIdentifierField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientDrugDetailResult4 {
        
        private Result resultField;
        
        private PatientDrugDetail4[] patientDrugDetailField;
        
        /// <remarks/>
        public Result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public PatientDrugDetail4[] patientDrugDetail {
            get {
                return this.patientDrugDetailField;
            }
            set {
                this.patientDrugDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientInformationRequester {
        
        private string userTypeField;
        
        private string userIdField;
        
        /// <remarks/>
        public string UserType {
            get {
                return this.userTypeField;
            }
            set {
                this.userTypeField = value;
            }
        }
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PrescriptionHistoryRequest {
        
        private System.DateTime startHistoryField;
        
        private System.DateTime endHistoryField;
        
        private string prescriptionStatusField;
        
        private string prescriptionSubStatusField;
        
        private string prescriptionArchiveStatusField;
        
        /// <remarks/>
        public System.DateTime StartHistory {
            get {
                return this.startHistoryField;
            }
            set {
                this.startHistoryField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndHistory {
            get {
                return this.endHistoryField;
            }
            set {
                this.endHistoryField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionStatus {
            get {
                return this.prescriptionStatusField;
            }
            set {
                this.prescriptionStatusField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionSubStatus {
            get {
                return this.prescriptionSubStatusField;
            }
            set {
                this.prescriptionSubStatusField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionArchiveStatus {
            get {
                return this.prescriptionArchiveStatusField;
            }
            set {
                this.prescriptionArchiveStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class PatientRequest {
        
        private string patientIdField;
        
        /// <remarks/>
        public string PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public partial class AccountRequest {
        
        private string accountIdField;
        
        private string siteIdField;
        
        /// <remarks/>
        public string AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public string SiteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://secure.newcropaccounts.com/V7/webservices")]
    public enum PrescriptionTransmissionQueryType {
        
        /// <remarks/>
        PrescriptionIDs,
        
        /// <remarks/>
        PrescriptionGuid,
        
        /// <remarks/>
        TransactionGuid,
        
        /// <remarks/>
        TransactionDetailGuid,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDailyScriptReportCompletedEventHandler(object sender, GetDailyScriptReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDailyScriptReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDailyScriptReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDailyScriptReportV2CompletedEventHandler(object sender, GetDailyScriptReportV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDailyScriptReportV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDailyScriptReportV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDailyScriptReportV3CompletedEventHandler(object sender, GetDailyScriptReportV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDailyScriptReportV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDailyScriptReportV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCompleteMedicationHistoryCompletedEventHandler(object sender, GetCompleteMedicationHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompleteMedicationHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompleteMedicationHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPatientFullMedicationHistory4CompletedEventHandler(object sender, GetPatientFullMedicationHistory4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientFullMedicationHistory4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientFullMedicationHistory4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDrugDetailResult4 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDrugDetailResult4)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPatientFullMedicationHistory5CompletedEventHandler(object sender, GetPatientFullMedicationHistory5CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientFullMedicationHistory5CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientFullMedicationHistory5CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientDrugDetailResult5 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientDrugDetailResult5)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPatientFullMedicationHistory6CompletedEventHandler(object sender, GetPatientFullMedicationHistory6CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientFullMedicationHistory6CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientFullMedicationHistory6CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPatientAllergyHistory2CompletedEventHandler(object sender, GetPatientAllergyHistory2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientAllergyHistory2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientAllergyHistory2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientAllergyExtendedDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientAllergyExtendedDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPatientAllergyHistoryV3CompletedEventHandler(object sender, GetPatientAllergyHistoryV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientAllergyHistoryV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientAllergyHistoryV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPatientFreeFormAllergyHistoryCompletedEventHandler(object sender, GetPatientFreeFormAllergyHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientFreeFormAllergyHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientFreeFormAllergyHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientFreeFormAllergyExtendedDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientFreeFormAllergyExtendedDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPrescriptionTransmissionStatusCompletedEventHandler(object sender, GetPrescriptionTransmissionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrescriptionTransmissionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrescriptionTransmissionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransmissionSummaryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransmissionSummaryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPrescriptionTransmissionStatusByPatientCompletedEventHandler(object sender, GetPrescriptionTransmissionStatusByPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrescriptionTransmissionStatusByPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrescriptionTransmissionStatusByPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransmissionSummaryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransmissionSummaryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GenerateTestRenewalRequestCompletedEventHandler(object sender, GenerateTestRenewalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateTestRenewalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateTestRenewalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllRenewalRequestsCompletedEventHandler(object sender, GetAllRenewalRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRenewalRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRenewalRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RenewalSummaryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RenewalSummaryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllRenewalRequestsV2CompletedEventHandler(object sender, GetAllRenewalRequestsV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRenewalRequestsV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRenewalRequestsV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RenewalSummaryResultV2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RenewalSummaryResultV2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllRenewalRequestsV3CompletedEventHandler(object sender, GetAllRenewalRequestsV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRenewalRequestsV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRenewalRequestsV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RenewalSummaryResultV2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RenewalSummaryResultV2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllRenewalRequestsDetailV4CompletedEventHandler(object sender, GetAllRenewalRequestsDetailV4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRenewalRequestsDetailV4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRenewalRequestsDetailV4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RenewalListDetailResultV4 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RenewalListDetailResultV4)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllRenewalRequestsSummaryV4CompletedEventHandler(object sender, GetAllRenewalRequestsSummaryV4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRenewalRequestsSummaryV4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRenewalRequestsSummaryV4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RenewalListSummaryResultV4 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RenewalListSummaryResultV4)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRenewalRequestDetailCompletedEventHandler(object sender, GetRenewalRequestDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRenewalRequestDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRenewalRequestDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RenewalDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RenewalDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRenewalRequestDetailV4CompletedEventHandler(object sender, GetRenewalRequestDetailV4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRenewalRequestDetailV4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRenewalRequestDetailV4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RenewalDetailResultV4 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RenewalDetailResultV4)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ProcessRenewalRequestCompletedEventHandler(object sender, ProcessRenewalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessRenewalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessRenewalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRenewalResponseTransmissionStatusCompletedEventHandler(object sender, GetRenewalResponseTransmissionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRenewalResponseTransmissionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRenewalResponseTransmissionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RenewalResponseDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RenewalResponseDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRenewalResponseStatusCompletedEventHandler(object sender, GetRenewalResponseStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRenewalResponseStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRenewalResponseStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FormularyAlternativesWithDrugInfo2CompletedEventHandler(object sender, FormularyAlternativesWithDrugInfo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FormularyAlternativesWithDrugInfo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FormularyAlternativesWithDrugInfo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DrugFormularyDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DrugFormularyDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendMissingHealthplanInformationCompletedEventHandler(object sender, SendMissingHealthplanInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMissingHealthplanInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMissingHealthplanInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPBMDrugHistoryV2CompletedEventHandler(object sender, GetPBMDrugHistoryV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPBMDrugHistoryV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPBMDrugHistoryV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DrugHistoryDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DrugHistoryDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMostRecentDownloadUrlCompletedEventHandler(object sender, GetMostRecentDownloadUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMostRecentDownloadUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMostRecentDownloadUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DownloadDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DownloadDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DrugDiseaseInteractionCompletedEventHandler(object sender, DrugDiseaseInteractionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DrugDiseaseInteractionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DrugDiseaseInteractionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DrugDiseaseDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DrugDiseaseDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PharmacySearchV3CompletedEventHandler(object sender, PharmacySearchV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PharmacySearchV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PharmacySearchV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PharmacyDetailResultV2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PharmacyDetailResultV2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PharmacySearchV4CompletedEventHandler(object sender, PharmacySearchV4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PharmacySearchV4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PharmacySearchV4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PharmacyDetailResultV4 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PharmacyDetailResultV4)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DrugSearchWithFormularyWithFavoritesV2CompletedEventHandler(object sender, DrugSearchWithFormularyWithFavoritesV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DrugSearchWithFormularyWithFavoritesV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DrugSearchWithFormularyWithFavoritesV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DrugFormularyFavoriteDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DrugFormularyFavoriteDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DrugSearchWithFormularyWithFavoritesV3CompletedEventHandler(object sender, DrugSearchWithFormularyWithFavoritesV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DrugSearchWithFormularyWithFavoritesV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DrugSearchWithFormularyWithFavoritesV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HealthplanSearchV2CompletedEventHandler(object sender, HealthplanSearchV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HealthplanSearchV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HealthplanSearchV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HealthplanDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HealthplanDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FormularyCoverageV3CompletedEventHandler(object sender, FormularyCoverageV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FormularyCoverageV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FormularyCoverageV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FormularyCoverageDetailResultV3 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FormularyCoverageDetailResultV3)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportPrescribingCountCompletedEventHandler(object sender, ReportPrescribingCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportPrescribingCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportPrescribingCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCounselingMessagesCompletedEventHandler(object sender, GetCounselingMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCounselingMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCounselingMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CounselingMessageDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CounselingMessageDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSideEffectsCompletedEventHandler(object sender, GetSideEffectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSideEffectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSideEffectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAccountStatusDetailCompletedEventHandler(object sender, GetAccountStatusDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountStatusDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountStatusDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPBMEligibilityV2CompletedEventHandler(object sender, GetPBMEligibilityV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPBMEligibilityV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPBMEligibilityV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EligibilityDetailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EligibilityDetailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPBMEligibilityV3CompletedEventHandler(object sender, GetPBMEligibilityV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPBMEligibilityV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPBMEligibilityV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EligibilityDetailResultV3 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EligibilityDetailResultV3)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPrescriptionTransmissionStatusV2CompletedEventHandler(object sender, GetPrescriptionTransmissionStatusV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrescriptionTransmissionStatusV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrescriptionTransmissionStatusV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransmissionSummaryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransmissionSummaryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSubmittedMessageTransactionStatusCompletedEventHandler(object sender, GetSubmittedMessageTransactionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubmittedMessageTransactionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubmittedMessageTransactionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageTransactionStatusResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageTransactionStatusResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DrugAllergyInteractionV2CompletedEventHandler(object sender, DrugAllergyInteractionV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DrugAllergyInteractionV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DrugAllergyInteractionV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DrugAllergyDetailResultV2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DrugAllergyDetailResultV2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ResolveFailedPrescriptionTransmissionCompletedEventHandler(object sender, ResolveFailedPrescriptionTransmissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResolveFailedPrescriptionTransmissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResolveFailedPrescriptionTransmissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMeaningfulUsePatientEncounterInfoCompletedEventHandler(object sender, GetMeaningfulUsePatientEncounterInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeaningfulUsePatientEncounterInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeaningfulUsePatientEncounterInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DoseCheckCompletedEventHandler(object sender, DoseCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoseCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoseCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591